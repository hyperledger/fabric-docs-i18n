Установка примеров, исполняемых файлов и образов Docker
=======================================================

Пока мы работаем над созданием инсталляторов для исполняемых файлов Hyperledger Fabric,
предоставляем вам скрипт, который загрузит и установит примеры и исполняемые файлы в вашу систему.
Мы считаем, что установленные примеры приложений будут полезны для ознакомления с возможностями
и работой Hyperledger Fabric.


.. note:: Если вы работаете с **Windows**, то для выполнения последующих команд терминала
          вам понадобится Docker Quickstart Terminal.
          Если еще не установили его, ознакомьтесь с разделом doc:`prereqs`.

          Если вы пользуетесь Docker Toolbox или macOS, то при установке и запуске примеров вам
          нужно будет использовать директорию ``/Users`` (macOS).

          Если вы используете Docker для Mac, вам нужно использовать директории ``/Users``,
          ``/Volumes``, ``/private`` или ``/tmp``.  Чтобы использовать другие директории, обратитесь
          к документации Docker на тему `совместное использование файлов <https://docs.docker.com/docker-for-mac/#file-sharing>`__.

          Если пользуетесь Docker для Windows, обратитесь к документации Docker
          на тему `совместно используемые диски <https://docs.docker.com/docker-for-windows/#shared-drives>`__
          и используйте пространство одного из совместной используемых дисков.

Определите место на вашей машине, где вы хотите разместить репозиторий `fabric-samples`, и введите этот путь в окне
терминала. Приведенная ниже команда выполнит следующие действия:

#. Если необходимо, склонирует репозиторий `hyperledger/fabric-samples <https://github.com/hyperledger/fabric-samples>`_.
#. Выберет тэг соответствующей версии.
#. Установит исполняемые файлы Hyperledger Fabric, специфичные для вашей платформы, а также
   файлы конфигурации для указанной версии - в директории /bin и /config в fabric-samples.
#. Скачает docker-образы Hyperledger Fabric для указанной версии.

Когда все готово, и вы находитесь в директории, в которую вы будете устанавливать примеры Fabric и исполняемые файлы,
выполните команду для загрузки необходимых файлов и образов.

.. note:: Если вам нужен самый последняя релиз, не указывайте идентификатор версии.

.. code:: bash

  curl -sSL https://bit.ly/2ysbOFE | bash -s

.. note:: Если вам нужен конкретный релиз, укажите идентификатор версии образов docker Fabric и Fabric CA.
          Нижеуказанная команда показывает, как загрузить последние выпуски -
          **Fabric v2.2.0** and **Fabric CA v1.4.7**

.. code:: bash

  curl -sSL https://bit.ly/2ysbOFE | bash -s -- <fabric_version> <fabric-ca_version>
  curl -sSL https://bit.ly/2ysbOFE | bash -s -- 2.2.0 1.4.7

.. note:: Если вы получаете ошибку при выполнении приведенной выше команды curl, возможно, у вас слишком
         старая версия curl, которая не обрабатывает перенаправления, или неподдерживаемая среда.

         Пожалуйста, посетите страницу :doc:`prereqs` для получения дополнительной информации о том, где найти
         последнюю версию curl и получить нужное окружение. В качестве альтернативы вы можете подставить
         не сокращенный URL-адрес: https://raw.githubusercontent.com/hyperledger/fabric/{BRANCH}/scripts/bootstrap.sh

Приведенная выше команда загружает и выполняет скрипт bash, который загрузит и извлечет все исполняемые файлы для
конкретной платформы, необходимые для настройки сети, и поместит их в клонированный репозиторий, созданный выше.
Он извлекает следующие исполняемые файлы для конкретной платформы:

  * ``configtxgen``,
  * ``configtxlator``,
  * ``cryptogen``,
  * ``discover``,
  * ``idemixgen``
  * ``orderer``,
  * ``peer``,
  * ``fabric-ca-client``,
  * ``fabric-ca-server``

и помещает их в поддиректорию ``bin`` текущей директории.

Можете добавить этот путь к вашей переменной среды PATH для того, чтобы не нужно было
полностью указывать путь к каждому исполняемому файлу, например:

.. code:: bash

  export PATH=<path to download location>/bin:$PATH

И наконец, скрипт загрузит docker-образы Hyperledger Fabric из
`Docker Hub <https://hub.docker.com/u/hyperledger/>`__ в ваш локальный реестр Docker и пометит их как 'latest'.

После исполнения скрипт перечислит список установленных образов Docker.

Посмотрите на название каждого образа; это компоненты, которые в конечном итоге составят нашу сеть Hyperledger Fabric.
Вы также заметите, что у вас есть два экземпляра одного и того же идентификатора образа - один помечен как
"amd64-1.x.x", а другой - как "latest". До версии 1.2.0 загружаемый образ определялся по ``uname -m`` и отображался
как "x86_64-1.x.x".

.. note:: Для других архитектур строка x86_64/amd64 будет
          замещена строкой, соответствующей вашей архитектуре.

.. note:: Если у вас есть вопросы, на которые вы не нашли ответа в этой документации,
          или у вас есть затруднения с каким-либо из руководств, вам могут помочь подсказки
          дальнейших действий на странице :doc:`questions`.

.. Licensed under Creative Commons Attribution 4.0 International License
   https://creativecommons.org/licenses/by/4.0/
