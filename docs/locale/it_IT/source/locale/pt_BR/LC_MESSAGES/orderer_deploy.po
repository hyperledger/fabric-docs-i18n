# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-24 19:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/orderer_deploy.md:1
msgid "Setting up an ordering node"
msgstr ""

#: ../../source/orderer_deploy.md:3
msgid ""
"In this topic, we'll describe the process for bootstrapping an ordering "
"node. If you want more information about the different ordering service "
"implementations and their relative strengths and weaknesses, check out "
"our conceptual documentation about ordering."
msgstr ""

#: ../../source/orderer_deploy.md:8
msgid "Broadly, this topic will involve a few interrelated steps:"
msgstr ""

#: ../../source/orderer_deploy.md:10
msgid ""
"Creating the organization your ordering node belongs to (if you have not "
"already done so)"
msgstr ""

#: ../../source/orderer_deploy.md:12
msgid "Configuring your node (using orderer.yaml)"
msgstr ""

#: ../../source/orderer_deploy.md:13
msgid "Creating the genesis block for the orderer system channel"
msgstr ""

#: ../../source/orderer_deploy.md:14
msgid "Bootstrapping the orderer"
msgstr ""

#: ../../source/orderer_deploy.md:16
msgid ""
"Note: this topic assumes you have already pulled the Hyperledger Fabric "
"orderer images from docker hub."
msgstr ""

#: ../../source/orderer_deploy.md:19
msgid "Create an organization definition"
msgstr ""

#: ../../source/orderer_deploy.md:21
msgid ""
"Like peers, all orderers must belong to an organization that must be "
"created before the orderer itself is created. This organization has a "
"definition encapsulated by a Membership Service Provider (MSP) that is "
"created by a Certificate Authority (CA) dedicated to creating the "
"certificates and MSP for the organization."
msgstr ""

#: ../../source/orderer_deploy.md:27
msgid ""
"For information about creating a CA and using it to create users and an "
"MSP, check out the Fabric CA user's guide."
msgstr ""

#: ../../source/orderer_deploy.md:30
msgid "Configure your node"
msgstr ""

#: ../../source/orderer_deploy.md:32
msgid ""
"The configuration of the orderer is handled through a yaml file called "
"orderer.yaml. The FABRIC_CFG_PATH environment variable is used to point "
"to an orderer.yaml file you've configured, which will extract a series of"
" files and certificates on your file system."
msgstr ""

#: ../../source/orderer_deploy.md:37
msgid ""
"To look at a sample orderer.yaml, check out the fabric-samples github "
"repo, which should be read and studied closely before proceeding. Note in"
" particular a few values:"
msgstr ""

#: ../../source/orderer_deploy.md:40
msgid ""
"LocalMSPID --- this is the name of the MSP, generated by your CA, of your"
" orderer organization. This is where your orderer organization admins "
"will be listed."
msgstr ""

#: ../../source/orderer_deploy.md:44
msgid ""
"LocalMSPDir --- the place in your file system where the local MSP is "
"located."
msgstr ""

#: ../../source/orderer_deploy.md:46
msgid ""
"# TLS enabled, Enabled: false. This is where you specify whether you want"
" to enable TLS. If you set this value to true, you will have to specify "
"the locations of the relevant TLS certificates. Note that this is "
"mandatory for Raft nodes."
msgstr ""

#: ../../source/orderer_deploy.md:51
msgid ""
"BootstrapFile --- this is the name of the genesis block you will generate"
" for this ordering service."
msgstr ""

#: ../../source/orderer_deploy.md:54
msgid ""
"BootstrapMethod --- the method by which the bootstrap block is given. For"
" now, this can only be file, in which the file in the BootstrapFile is "
"specified."
msgstr ""

#: ../../source/orderer_deploy.md:57
msgid ""
"If you are deploying this node as part of a cluster (for example, as part"
" of a cluster of Raft nodes), make note of the Cluster and Consensus "
"sections."
msgstr ""

#: ../../source/orderer_deploy.md:60
msgid ""
"If you plan to deploy a Kafka based ordering service, you will need to "
"complete the Kafka section."
msgstr ""

#: ../../source/orderer_deploy.md:63
msgid "Generate the genesis block of the orderer"
msgstr ""

#: ../../source/orderer_deploy.md:65
msgid ""
"The first block of a newly created channel is known as a \"genesis "
"block\". If this genesis block is being created as part of the creation "
"of a new network (in other words, if the orderer being created will not "
"be joined to an existing cluster of orderers), then this genesis block "
"will be the first block of the \"orderer system channel\" (also known as "
"the \"ordering system channel\"), a special channel managed by the "
"orderer admins which includes a list of the organizations permitted to "
"create channels. The genesis block of the orderer system channel is "
"special: it must be created and included in the configuration of the node"
" before the node can be started."
msgstr ""

#: ../../source/orderer_deploy.md:75
msgid ""
"To learn how to create a genesis block using the configtxgen tool, check "
"out Channel Configuration (configtx)."
msgstr ""

#: ../../source/orderer_deploy.md:78
msgid "Bootstrap the ordering node"
msgstr ""

#: ../../source/orderer_deploy.md:80
msgid ""
"Once you have built the images, created the MSP, configured your "
"orderer.yaml, and created the genesis block, you're ready to start your "
"orderer using a command that will look similar to:"
msgstr ""

#: ../../source/orderer_deploy.md:88
msgid "With the address of your orderer replacing orderer.example.com."
msgstr ""

#~ msgid "Setting up an ordering node"
#~ msgstr ""

#~ msgid ""
#~ "In this topic, we'll describe the "
#~ "process for bootstrapping an ordering "
#~ "node. If you want more information "
#~ "about the different ordering service "
#~ "implementations and their relative strengths"
#~ " and weaknesses, check out our "
#~ "conceptual documentation about ordering."
#~ msgstr ""

#~ msgid "Configuring your node (using orderer.yaml)"
#~ msgstr ""

#~ msgid "Create an organization definition"
#~ msgstr ""

#~ msgid ""
#~ "Like peers, all orderers must belong "
#~ "to an organization that must be "
#~ "created before the orderer itself is "
#~ "created. This organization has a "
#~ "definition encapsulated by a Membership "
#~ "Service Provider (MSP) that is created"
#~ " by a Certificate Authority (CA) "
#~ "dedicated to creating the certificates "
#~ "and MSP for the organization."
#~ msgstr ""

#~ msgid ""
#~ "For information about creating a CA "
#~ "and using it to create users and"
#~ " an MSP, check out the Fabric "
#~ "CA user's guide."
#~ msgstr ""

#~ msgid "Configure your node"
#~ msgstr ""

#~ msgid ""
#~ "The configuration of the orderer is "
#~ "handled through a yaml file called "
#~ "orderer.yaml. The FABRIC_CFG_PATH environment "
#~ "variable is used to point to an"
#~ " orderer.yaml file you've configured, which"
#~ " will extract a series of files "
#~ "and certificates on your file system."
#~ msgstr ""

#~ msgid ""
#~ "To look at a sample orderer.yaml, "
#~ "check out the fabric-samples github "
#~ "repo, which should be read and "
#~ "studied closely before proceeding. Note "
#~ "in particular a few values:"
#~ msgstr ""

#~ msgid ""
#~ "LocalMSPID --- this is the name of"
#~ " the MSP, generated by your CA, "
#~ "of your orderer organization. This is"
#~ " where your orderer organization admins "
#~ "will be listed."
#~ msgstr ""

#~ msgid ""
#~ "LocalMSPDir --- the place in your "
#~ "file system where the local MSP is"
#~ " located."
#~ msgstr ""

#~ msgid ""
#~ "# TLS enabled, Enabled: false. This "
#~ "is where you specify whether you "
#~ "want to enable TLS. If you set "
#~ "this value to true, you will have"
#~ " to specify the locations of the "
#~ "relevant TLS certificates. Note that "
#~ "this is mandatory for Raft nodes."
#~ msgstr ""

#~ msgid ""
#~ "BootstrapFile --- this is the name "
#~ "of the genesis block you will "
#~ "generate for this ordering service."
#~ msgstr ""

#~ msgid ""
#~ "BootstrapMethod --- the method by which"
#~ " the bootstrap block is given. For"
#~ " now, this can only be file, in"
#~ " which the file in the BootstrapFile"
#~ " is specified."
#~ msgstr ""

#~ msgid ""
#~ "If you are deploying this node as"
#~ " part of a cluster (for example, "
#~ "as part of a cluster of Raft "
#~ "nodes), make note of the Cluster "
#~ "and Consensus sections."
#~ msgstr ""

#~ msgid ""
#~ "If you plan to deploy a Kafka "
#~ "based ordering service, you will need"
#~ " to complete the Kafka section."
#~ msgstr ""

#~ msgid "Generate the genesis block of the orderer"
#~ msgstr ""

#~ msgid ""
#~ "The first block of a newly created"
#~ " channel is known as a \"genesis "
#~ "block\". If this genesis block is "
#~ "being created as part of the "
#~ "creation of a new network (in "
#~ "other words, if the orderer being "
#~ "created will not be joined to an"
#~ " existing cluster of orderers), then "
#~ "this genesis block will be the "
#~ "first block of the \"orderer system "
#~ "channel\" (also known as the \"ordering"
#~ " system channel\"), a special channel "
#~ "managed by the orderer admins which "
#~ "includes a list of the organizations "
#~ "permitted to create channels. The "
#~ "genesis block of the orderer system "
#~ "channel is special: it must be "
#~ "created and included in the "
#~ "configuration of the node before the "
#~ "node can be started."
#~ msgstr ""

#~ msgid ""
#~ "To learn how to create a genesis"
#~ " block using the configtxgen tool, "
#~ "check out Channel Configuration (configtx)."
#~ msgstr ""

#~ msgid "Bootstrap the ordering node"
#~ msgstr ""

#~ msgid ""
#~ "Once you have built the images, "
#~ "created the MSP, configured your "
#~ "orderer.yaml, and created the genesis "
#~ "block, you're ready to start your "
#~ "orderer using a command that will "
#~ "look similar to:"
#~ msgstr ""

#~ msgid "With the address of your orderer replacing orderer.example.com."
#~ msgstr ""

#~ msgid "# Setting up an ordering node"
#~ msgstr ""

#~ msgid ""
#~ "In this topic, we'll describe the "
#~ "process for bootstrapping an ordering "
#~ "node. If you want more information "
#~ "about the different ordering service "
#~ "implementations and their relative strengths"
#~ " and weaknesses, check out our "
#~ "[conceptual documentation about "
#~ "ordering](./orderer/ordering_service.html)."
#~ msgstr ""

#~ msgid "Configuring your node (using `orderer.yaml`)"
#~ msgstr ""

#~ msgid "## Create an organization definition"
#~ msgstr ""

#~ msgid ""
#~ "Like peers, all orderers must belong "
#~ "to an organization that must be "
#~ "created before the orderer itself is "
#~ "created. This organization has a "
#~ "definition encapsulated by a [Membership "
#~ "Service Provider](./membership/membership.html) (MSP) "
#~ "that is created by a Certificate "
#~ "Authority (CA) dedicated to creating the"
#~ " certificates and MSP for the "
#~ "organization."
#~ msgstr ""

#~ msgid ""
#~ "For information about creating a CA "
#~ "and using it to create users and"
#~ " an MSP, check out the [Fabric "
#~ "CA user's guide](https://hyperledger-fabric-"
#~ "ca.readthedocs.io/en/latest/users-guide.html)."
#~ msgstr ""

#~ msgid "## Configure your node"
#~ msgstr ""

#~ msgid ""
#~ "The configuration of the orderer is "
#~ "handled through a `yaml` file called "
#~ "`orderer.yaml`. The `FABRIC_CFG_PATH` environment"
#~ " variable is used to point to "
#~ "an `orderer.yaml` file you've configured, "
#~ "which will extract a series of "
#~ "files and certificates on your file "
#~ "system."
#~ msgstr ""

#~ msgid ""
#~ "To look at a sample `orderer.yaml`, "
#~ "check out the [`fabric-samples` github"
#~ " "
#~ "repo](https://github.com/hyperledger/fabric/blob/release-2.0/sampleconfig/orderer.yaml),"
#~ " which **should be read and studied"
#~ " closely** before proceeding. Note in "
#~ "particular a few values:"
#~ msgstr ""

#~ msgid ""
#~ "`LocalMSPID` --- this is the name "
#~ "of the MSP, generated by your CA,"
#~ " of your"
#~ msgstr ""

#~ msgid ""
#~ "orderer organization. This is where your"
#~ " orderer organization admins will be "
#~ "listed."
#~ msgstr ""

#~ msgid ""
#~ "`LocalMSPDir` --- the place in your "
#~ "file system where the local MSP is"
#~ " located."
#~ msgstr ""

#~ msgid ""
#~ "`# TLS enabled`, `Enabled: false`. This"
#~ " is where you specify whether you "
#~ "want"
#~ msgstr ""

#~ msgid ""
#~ "to [enable TLS](enable_tls.html). If you "
#~ "set this value to `true`, you will"
#~ " have to specify the locations of "
#~ "the relevant TLS certificates. Note that"
#~ " this is mandatory for Raft nodes."
#~ msgstr ""

#~ msgid ""
#~ "`BootstrapFile` --- this is the name "
#~ "of the genesis block you will "
#~ "generate for"
#~ msgstr ""

#~ msgid "this ordering service."
#~ msgstr ""

#~ msgid ""
#~ "`BootstrapMethod` --- the method by "
#~ "which the bootstrap block is given. "
#~ "For now,"
#~ msgstr ""

#~ msgid ""
#~ "this can only be `file`, in which"
#~ " the file in the `BootstrapFile` is"
#~ " specified."
#~ msgstr ""

#~ msgid ""
#~ "If you are deploying this node as"
#~ " part of a cluster (for example, "
#~ "as part of a cluster of Raft "
#~ "nodes), make note of the `Cluster` "
#~ "and `Consensus` sections."
#~ msgstr ""

#~ msgid ""
#~ "If you plan to deploy a Kafka "
#~ "based ordering service, you will need"
#~ " to complete the `Kafka` section."
#~ msgstr ""

#~ msgid "## Generate the genesis block of the orderer"
#~ msgstr ""

#~ msgid ""
#~ "The first block of a newly created"
#~ " channel is known as a \"genesis "
#~ "block\". If this genesis block is "
#~ "being created as part of the "
#~ "creation of a **new network** (in "
#~ "other words, if the orderer being "
#~ "created will not be joined to an"
#~ " existing cluster of orderers), then "
#~ "this genesis block will be the "
#~ "first block of the \"orderer system "
#~ "channel\" (also known as the \"ordering"
#~ " system channel\"), a special channel "
#~ "managed by the orderer admins which "
#~ "includes a list of the organizations "
#~ "permitted to create channels. *The "
#~ "genesis block of the orderer system "
#~ "channel is special: it must be "
#~ "created and included in the "
#~ "configuration of the node before the "
#~ "node can be started.*"
#~ msgstr ""

#~ msgid ""
#~ "To learn how to create a genesis"
#~ " block using the `configtxgen` tool, "
#~ "check out [Channel Configuration "
#~ "(configtx)](configtx.html)."
#~ msgstr ""

#~ msgid "## Bootstrap the ordering node"
#~ msgstr ""

#~ msgid ""
#~ "Once you have built the images, "
#~ "created the MSP, configured your "
#~ "`orderer.yaml`, and created the genesis "
#~ "block, you're ready to start your "
#~ "orderer using a command that will "
#~ "look similar to:"
#~ msgstr ""

#~ msgid ""
#~ "``` docker-compose -f docker-compose-"
#~ "cli.yaml up -d --no-deps "
#~ "orderer.example.com ```"
#~ msgstr ""

#~ msgid "With the address of your orderer replacing `orderer.example.com`."
#~ msgstr ""

#~ msgid ""
#~ "<!--- Licensed under Creative Commons "
#~ "Attribution 4.0 International License "
#~ "https://creativecommons.org/licenses/by/4.0/) -->"
#~ msgstr ""

