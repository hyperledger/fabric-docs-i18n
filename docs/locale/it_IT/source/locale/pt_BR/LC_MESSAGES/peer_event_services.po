# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-23 15:31-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/peer_event_services.rst:2
msgid "Peer channel-based event services"
msgstr ""

#: ../../source/peer_event_services.rst:5
msgid "General overview"
msgstr ""

#: ../../source/peer_event_services.rst:7
msgid ""
"In previous versions of Fabric, the peer event service was known as the "
"event hub. This service sent events any time a new block was added to the"
" peer's ledger, regardless of the channel to which that block pertained, "
"and it was only accessible to members of the organization running the "
"eventing peer (i.e., the one being connected to for events)."
msgstr ""

#: ../../source/peer_event_services.rst:13
msgid ""
"Starting with v1.1, there are new services which provide events. These "
"services use an entirely different design to provide events on a per-"
"channel basis. This means that registration for events occurs at the "
"level of the channel instead of the peer, allowing for fine-grained "
"control over access to the peer's data. Requests to receive events are "
"accepted from identities outside of the peer's organization (as defined "
"by the channel configuration). This also provides greater reliability and"
" a way to receive events that may have been missed (whether due to a "
"connectivity issue or because the peer is joining a network that has "
"already been running)."
msgstr ""

#: ../../source/peer_event_services.rst:23
msgid "Available services"
msgstr ""

#: ../../source/peer_event_services.rst:25
msgid "``Deliver``"
msgstr ""

#: ../../source/peer_event_services.rst:27
msgid ""
"This service sends entire blocks that have been committed to the ledger. "
"If any events were set by a chaincode, these can be found within the "
"``ChaincodeActionPayload`` of the block."
msgstr ""

#: ../../source/peer_event_services.rst:31
msgid "``DeliverWithPrivateData``"
msgstr ""

#: ../../source/peer_event_services.rst:33
msgid ""
"This service sends the same data as the ``Deliver`` service, and "
"additionally includes any private data from collections that the client's"
" organization is authorized to access."
msgstr ""

#: ../../source/peer_event_services.rst:37
msgid "``DeliverFiltered``"
msgstr ""

#: ../../source/peer_event_services.rst:39
msgid ""
"This service sends \"filtered\" blocks, minimal sets of information about"
" blocks that have been committed to the ledger. It is intended to be used"
" in a network where owners of the peers wish for external clients to "
"primarily receive information about their transactions and the status of "
"those transactions. If any events were set by a chaincode, these can be "
"found within the ``FilteredChaincodeAction`` of the filtered block."
msgstr ""

#: ../../source/peer_event_services.rst:46
msgid "The payload of chaincode events will not be included in filtered blocks."
msgstr ""

#: ../../source/peer_event_services.rst:49
msgid "How to register for events"
msgstr ""

#: ../../source/peer_event_services.rst:51
msgid ""
"Registration for events is done by sending an envelope containing a "
"deliver seek info message to the peer that contains the desired start and"
" stop positions, the seek behavior (block until ready or fail if not "
"ready). There are helper variables ``SeekOldest`` and ``SeekNewest`` that"
" can be used to indicate the oldest (i.e. first) block or the newest "
"(i.e. last) block on the ledger. To have the services send events "
"indefinitely, the ``SeekInfo`` message should include a stop position of "
"``MAXINT64``."
msgstr ""

#: ../../source/peer_event_services.rst:59
msgid ""
"If mutual TLS is enabled on the peer, the TLS certificate hash must be "
"set in the envelope's channel header."
msgstr ""

#: ../../source/peer_event_services.rst:62
msgid ""
"By default, the event services use the Channel Readers policy to "
"determine whether to authorize requesting clients for events."
msgstr ""

#: ../../source/peer_event_services.rst:66
msgid "Overview of deliver response messages"
msgstr ""

#: ../../source/peer_event_services.rst:68
msgid "The event services send back ``DeliverResponse`` messages."
msgstr ""

#: ../../source/peer_event_services.rst:70
msgid "Each message contains one of the following:"
msgstr ""

#: ../../source/peer_event_services.rst:72
msgid ""
"status -- HTTP status code. Each of the services will return the "
"appropriate failure code if any failure occurs; otherwise, it will return"
" ``200 - SUCCESS`` once the service has completed sending all information"
" requested by the ``SeekInfo`` message."
msgstr ""

#: ../../source/peer_event_services.rst:76
msgid "block -- returned only by the ``Deliver`` service."
msgstr ""

#: ../../source/peer_event_services.rst:77
msgid ""
"block and private data -- returned only by the ``DeliverWithPrivateData``"
" service."
msgstr ""

#: ../../source/peer_event_services.rst:78
msgid "filtered block -- returned only by the ``DeliverFiltered`` service."
msgstr ""

#: ../../source/peer_event_services.rst:80
msgid "A filtered block contains:"
msgstr ""

#: ../../source/peer_event_services.rst:82
msgid "channel ID."
msgstr ""

#: ../../source/peer_event_services.rst:83
msgid "number (i.e. the block number)."
msgstr ""

#: ../../source/peer_event_services.rst:84
msgid "array of filtered transactions."
msgstr ""

#: ../../source/peer_event_services.rst:85
msgid "transaction ID."
msgstr ""

#: ../../source/peer_event_services.rst:87
msgid "type (e.g. ``ENDORSER_TRANSACTION``, ``CONFIG``)."
msgstr ""

#: ../../source/peer_event_services.rst:88
msgid "transaction validation code."
msgstr ""

#: ../../source/peer_event_services.rst:92
msgid "filtered transaction actions."
msgstr ""

#: ../../source/peer_event_services.rst:92
msgid "array of filtered chaincode actions."
msgstr ""

#: ../../source/peer_event_services.rst:92
msgid "chaincode event for the transaction (with the payload nilled out)."
msgstr ""

#: ../../source/peer_event_services.rst:95
msgid "SDK event documentation"
msgstr ""

#: ../../source/peer_event_services.rst:97
msgid ""
"For further details on using the event services, refer to the `SDK "
"documentation. <https://hyperledger.github.io/fabric-sdk-node/master"
"/tutorial-channel-events.html>`_"
msgstr ""

