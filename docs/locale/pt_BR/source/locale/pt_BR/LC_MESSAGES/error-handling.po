# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-23 15:31-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/error-handling.rst:2
msgid "Error handling"
msgstr ""

#: ../../source/error-handling.rst:5
msgid "General Overview"
msgstr ""

#: ../../source/error-handling.rst:6
msgid ""
"Hyperledger Fabric code should use the vendored package "
"**github.com/pkg/errors** in place of the standard error type provided by"
" Go. This package allows easy generation and display of stack traces with"
" error messages."
msgstr ""

#: ../../source/error-handling.rst:12
msgid "Usage Instructions"
msgstr ""

#: ../../source/error-handling.rst:14
msgid ""
"**github.com/pkg/errors** should be used in place of all calls to "
"``fmt.Errorf()`` or ``errors.New()``. Using this package will generate a "
"call stack that will be appended to the error message."
msgstr ""

#: ../../source/error-handling.rst:18
msgid ""
"Using this package is simple and will only require easy tweaks to your "
"code."
msgstr ""

#: ../../source/error-handling.rst:20
msgid "First, you'll need to import **github.com/pkg/errors**."
msgstr ""

#: ../../source/error-handling.rst:22
msgid ""
"Next, update all errors that are generated by your code to use one of the"
" error creation functions (errors.New(), errors.Errorf(), "
"errors.WithMessage(), errors.Wrap(), errors.Wrapf()."
msgstr ""

#: ../../source/error-handling.rst:26
msgid ""
"See https://godoc.org/github.com/pkg/errors for complete documentation of"
" the available error creation function. Also, refer to the General "
"guidelines section below for more specific guidelines for using the "
"package for Fabric code."
msgstr ""

#: ../../source/error-handling.rst:31
#, python-format
msgid ""
"Finally, change the formatting directive for any logger or fmt.Printf() "
"calls from ``%s`` to ``%+v`` to print the call stack along with the error"
" message."
msgstr ""

#: ../../source/error-handling.rst:35
msgid "General guidelines for error handling in Hyperledger Fabric"
msgstr ""

#: ../../source/error-handling.rst:37
msgid ""
"If you are servicing a user request, you should log the error and return "
"it."
msgstr ""

#: ../../source/error-handling.rst:38
msgid ""
"If the error comes from an external source, such as a Go library or "
"vendored package, wrap the error using errors.Wrap() to generate a call "
"stack for the error."
msgstr ""

#: ../../source/error-handling.rst:41
msgid ""
"If the error comes from another Fabric function, add further context, if "
"desired, to the error message using errors.WithMessage() while leaving "
"the call stack unaffected."
msgstr ""

#: ../../source/error-handling.rst:44
msgid "A panic should not be allowed to propagate to other packages."
msgstr ""

#: ../../source/error-handling.rst:47
msgid "Example program"
msgstr ""

#: ../../source/error-handling.rst:49
msgid ""
"The following example program provides a clear demonstration of using the"
" package:"
msgstr ""

