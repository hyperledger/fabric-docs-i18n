# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-14 17:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/kafka_raft_migration.md:1
msgid "Migrating from Kafka to Raft"
msgstr ""

#: ../../source/kafka_raft_migration.md:3
msgid ""
"Note: this document presumes a high degree of expertise with channel "
"configuration update transactions. As the process for migration involves "
"several channel configuration update transactions, do not attempt to "
"migrate from Kafka to Raft without first familiarizing yourself with the "
"Add an Organization to a Channel tutorial, which describes the channel "
"update process in detail."
msgstr ""

#: ../../source/kafka_raft_migration.md:10
msgid ""
"For users who want to transition channels from using Kafka-based ordering"
" services to Raft-based ordering services, nodes at v1.4.2 or higher "
"allow this to be accomplished through a series of configuration update "
"transactions on each channel in the network."
msgstr ""

#: ../../source/kafka_raft_migration.md:15
msgid ""
"This tutorial will describe this process at a high level, calling out "
"specific details where necessary, rather than show each command in "
"detail."
msgstr ""

#: ../../source/kafka_raft_migration.md:18
msgid "Assumptions and considerations"
msgstr ""

#: ../../source/kafka_raft_migration.md:20
msgid "Before attempting migration, take the following into account:"
msgstr ""

#: ../../source/kafka_raft_migration.md:47
msgid "High level migration flow"
msgstr ""

#: ../../source/kafka_raft_migration.md:49
msgid "Migration is carried out in five phases."
msgstr ""

#: ../../source/kafka_raft_migration.md:62
msgid "Preparing to migrate"
msgstr ""

#: ../../source/kafka_raft_migration.md:64
msgid "There are several steps you should take before attempting to migrate."
msgstr ""

#: ../../source/kafka_raft_migration.md:93
msgid "Entry to maintenance mode"
msgstr ""

#: ../../source/kafka_raft_migration.md:95
msgid ""
"Prior to setting the ordering service into maintenance mode, it is "
"recommended that the peers and clients of the network be stopped. Leaving"
" peers or clients up and running is safe, however, because the ordering "
"service will reject all of their requests, their logs will fill with "
"benign but misleading failures."
msgstr ""

#: ../../source/kafka_raft_migration.md:100
msgid ""
"Follow the process in the Add an Organization to a Channel tutorial to "
"pull, translate, and scope the configuration of each channel, starting "
"with the system channel. The only field you should change during this "
"step is in the channel configuration at /Channel/Orderer/ConsensusType. "
"In a JSON representation of the channel configuration, this would be "
".channel_group.groups.Orderer.values.ConsensusType​."
msgstr ""

#: ../../source/kafka_raft_migration.md:107
msgid ""
"The ConsensusType is represented by three values: Type, Metadata, and "
"State, where:"
msgstr ""

#: ../../source/kafka_raft_migration.md:117
msgid ""
"In the first step of the channel configuration update, only change the "
"State from STATE_NORMAL to STATE_MAINTENANCE. Do not change the Type or "
"the Metadata field yet. Note that the Type should currently be kafka."
msgstr ""

#: ../../source/kafka_raft_migration.md:121
msgid ""
"While in maintenance mode, normal transactions, config updates unrelated "
"to migration, and Deliver requests from the peers used to retrieve new "
"blocks are rejected. This is done in order to prevent the need to both "
"backup, and if necessary restore, peers during migration, as they only "
"receive updates once migration has successfully completed. In other "
"words, we want to keep the ordering service backup point, which is the "
"next step, ahead of the peer’s ledger, in order to be able to perform "
"rollback if needed. However, ordering node admins can issue Deliver "
"requests (which they need to be able to do in order to continue the "
"migration process)."
msgstr ""

#: ../../source/kafka_raft_migration.md:131
msgid ""
"Verify that each ordering service node has entered maintenance mode on "
"each of the channels. This can be done by fetching the last config block "
"and making sure that the Type, Metadata, State on each channel is kafka, "
"empty (recall that there is no metadata for Kafka), and "
"STATE_MAINTENANCE, respectively."
msgstr ""

#: ../../source/kafka_raft_migration.md:136
msgid ""
"If the channels have been updated successfully, the ordering service is "
"now ready for backup."
msgstr ""

#: ../../source/kafka_raft_migration.md:139
msgid "Backup files and shut down servers"
msgstr ""

#: ../../source/kafka_raft_migration.md:141
msgid ""
"Shut down all ordering nodes, Kafka servers, and Zookeeper servers. It is"
" important to shutdown the ordering service nodes first. Then, after "
"allowing the Kafka service to flush its logs to disk (this typically "
"takes about 30 seconds, but might take longer depending on your system), "
"the Kafka servers should be shut down. Shutting down the Kafka brokers at"
" the same time as the orderers can result in the filesystem state of the "
"orderers being more recent than the Kafka brokers which could prevent "
"your network from starting."
msgstr ""

#: ../../source/kafka_raft_migration.md:149
msgid ""
"Create a backup of the file system of these servers. Then restart the "
"Kafka service and then the ordering service nodes."
msgstr ""

#: ../../source/kafka_raft_migration.md:152
msgid "Switch to Raft in maintenance mode"
msgstr ""

#: ../../source/kafka_raft_migration.md:154
msgid ""
"The next step in the migration process is another channel configuration "
"update for each channel. In this configuration update, switch the Type to"
" etcdraft (for Raft) while keeping the State in STATE_MAINTENANCE, and "
"fill in the Metadata configuration​. It is highly recommended that the "
"Metadata configuration​ be identical​ on all channels. If you want to "
"establish different consenter sets with different nodes, you will be able"
" to reconfigure the Metadata configuration​ after the system is restarted"
" into etcdraft mode. Supplying an identical metadata object, and hence, "
"an identical consenter set, means that when the nodes are restarted, if "
"the system channel forms a quorum and can exit maintenance mode, other "
"channels will likely be able do the same. Supplying different consenter "
"sets to each channel can cause one channel to succeed in forming a "
"cluster while another channel will fail."
msgstr ""

#: ../../source/kafka_raft_migration.md:167
msgid ""
"Then, validate that each ordering service node has committed the "
"ConsensusType change configuration update by pulling and inspecting the "
"configuration of each channel."
msgstr ""

#: ../../source/kafka_raft_migration.md:171
msgid ""
"Note: For each channel, the transaction that changes the ConsensusType "
"must be the last configuration transaction before restarting the nodes "
"(in the next step). If some other configuration transaction happens after"
" this step, the nodes will most likely crash on restart, or result in "
"undefined behavior."
msgstr ""

#: ../../source/kafka_raft_migration.md:176
msgid "Restart and validate leader"
msgstr ""

#: ../../source/kafka_raft_migration.md:178
msgid "Note: exit of maintenance mode must be done after restart."
msgstr ""

#: ../../source/kafka_raft_migration.md:180
msgid ""
"After the ConsensusType update has been completed on each channel, stop "
"all ordering service nodes, stop all Kafka brokers and Zookeepers, and "
"then restart only the ordering service nodes. They should restart as Raft"
" nodes, form a cluster per channel, and elect a leader on each channel."
msgstr ""

#: ../../source/kafka_raft_migration.md:185
msgid ""
"Note: Since the Raft-based ordering service uses client and server TLS "
"certificates for authentication between orderer nodes, additional "
"configurations are required before you start them again, see Section: "
"Local Configuration for more details."
msgstr ""

#: ../../source/kafka_raft_migration.md:190
msgid ""
"After restart process finished, make sure to validate that a leader has "
"been elected on each channel by inspecting the node logs (you can see "
"what to look for below). This will confirm that the process has been "
"completed successfully."
msgstr ""

#: ../../source/kafka_raft_migration.md:195
msgid "When a leader is elected, the log will show, for each channel:"
msgstr ""

#: ../../source/kafka_raft_migration.md:202
msgid "For example:"
msgstr ""

#: ../../source/kafka_raft_migration.md:209
msgid ""
"In this example ​node 2​ reports that a leader was elected (the leader is"
" ​node 1​) by the cluster of channel ​testchannel1​."
msgstr ""

#: ../../source/kafka_raft_migration.md:212
msgid "Switch out of maintenance mode"
msgstr ""

#: ../../source/kafka_raft_migration.md:214
msgid ""
"Perform another channel configuration update on each channel (sending the"
" config update to the same ordering node you have been sending "
"configuration updates to until now), switching the State from "
"STATE_MAINTENANCE to STATE_NORMAL. Start with the system channel, as "
"usual. If it succeeds on the ordering system channel, migration is likely"
" to succeed on all channels. To verify, fetch the last config block of "
"the system channel from the ordering node, verifying that the State is "
"now STATE_NORMAL. For completeness, verify this on each ordering node."
msgstr ""

#: ../../source/kafka_raft_migration.md:222
msgid ""
"When this process is completed, the ordering service is now ready to "
"accept all transactions on all channels. If you stopped your peers and "
"application as recommended, you may now restart them."
msgstr ""

#: ../../source/kafka_raft_migration.md:226
msgid "Abort and rollback"
msgstr ""

#: ../../source/kafka_raft_migration.md:228
msgid ""
"If a problem emerges during the migration process before exiting "
"maintenance mode, simply perform the rollback procedure below."
msgstr ""

#: ../../source/kafka_raft_migration.md:242
msgid "There are a few states which might indicate migration has failed:"
msgstr ""

