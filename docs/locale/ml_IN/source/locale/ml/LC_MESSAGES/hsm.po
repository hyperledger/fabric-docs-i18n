# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-14 17:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/hsm.md:1
msgid "Using a Hardware Security Module (HSM)"
msgstr ""

#: ../../source/hsm.md:3
msgid ""
"The cryptographic operations performed by Fabric nodes can be delegated "
"to a Hardware Security Module (HSM).  An HSM protects your private keys "
"and handles cryptographic operations, allowing your peers and orderer "
"nodes to sign and endorse transactions without exposing their private "
"keys.  If you require compliance with government standards such as FIPS "
"140-2, there are multiple certified HSMs from which to choose."
msgstr ""

#: ../../source/hsm.md:10
msgid "Fabric currently leverages the PKCS11 standard to communicate with an HSM."
msgstr ""

#: ../../source/hsm.md:13
msgid "Configuring an HSM"
msgstr ""

#: ../../source/hsm.md:15
msgid ""
"To use an HSM with your Fabric node, you need to update the bccsp (Crypto"
" Service Provider) section of the node configuration file such as "
"core.yaml or orderer.yaml. In the bccsp section, you need to select "
"PKCS11 as the provider and enter the path to the PKCS11 library that you "
"would like to use. You also need to provide the Label and PIN of the "
"token that you created for your cryptographic operations. You can use one"
" token to generate and store multiple keys."
msgstr ""

#: ../../source/hsm.md:22
msgid ""
"The prebuilt Hyperledger Fabric Docker images are not enabled to use "
"PKCS11. If you are deploying Fabric using docker, you need to build your "
"own images and enable PKCS11 using the following command:"
msgstr ""

#: ../../source/hsm.md:28
msgid ""
"You also need to ensure that the PKCS11 library is available to be used "
"by the node by installing it or mounting it inside the container."
msgstr ""

#: ../../source/hsm.md:31
msgid "Example"
msgstr ""

#: ../../source/hsm.md:33
msgid ""
"The following example demonstrates how to configure a Fabric node to use "
"an HSM."
msgstr ""

#: ../../source/hsm.md:35
msgid ""
"First, you will need to install an implementation of the PKCS11 "
"interface. This example uses the softhsm open source implementation. "
"After downloading and configuring softhsm, you will need to set the "
"SOFTHSM2_CONF environment variable to point to the softhsm2 configuration"
" file."
msgstr ""

#: ../../source/hsm.md:41
msgid ""
"You can then use softhsm to create the token that will handle the "
"cryptographic operations of your Fabric node inside an HSM slot. In this "
"example, we create a token labelled \"fabric\" and set the pin to "
"\"71811222\". After you have created the token, update the configuration "
"file to use PKCS11 and your token as the crypto service provider. You can"
" find an example bccsp section below:"
msgstr ""

#: ../../source/hsm.md:63
msgid ""
"By default, when private keys are generated using the HSM, the private "
"key is mutable, meaning PKCS11 private key  attributes can be changed "
"after the key is generated. Setting Immutable to true means that the "
"private key attributes cannot be altered after key generation. Before you"
" configure immutability by setting Immutable: true, ensure that PKCS11 "
"object copy is supported by the HSM."
msgstr ""

#: ../../source/hsm.md:65
msgid ""
"You can also use environment variables to override the relevant fields of"
" the configuration file. If you are connecting to softhsm2 using the "
"Fabric CA server, you could set the following environment variables or "
"directly set the corresponding values in the CA server config file:"
msgstr ""

#: ../../source/hsm.md:74
msgid ""
"If you are connecting to softhsm2 using the Fabric peer, you could set "
"the following environment variables or directly set the corresponding "
"values in the peer config file:"
msgstr ""

#: ../../source/hsm.md:83
msgid ""
"If you are connecting to softhsm2 using the Fabric orderer, you could set"
" the following environment variables or directly set the corresponding "
"values in the orderer config file:"
msgstr ""

#: ../../source/hsm.md:92
msgid ""
"If you are deploying your nodes using docker compose, after building your"
" own images, you can update your docker compose files to mount the "
"softhsm library and configuration file inside the container using "
"volumes. As an example, you would add the following environment and "
"volumes variables to your docker compose file:"
msgstr ""

#: ../../source/hsm.md:105
msgid "Setting up a network using HSM"
msgstr ""

#: ../../source/hsm.md:107
msgid ""
"If you are deploying Fabric nodes using an HSM, your private keys need to"
" be generated and stored inside the HSM rather than inside the keystore "
"folder of the node's local MSP folder. The keystore folder of the MSP "
"will remain empty. Instead, the Fabric node will use the subject key "
"identifier of the signing certificate in the signcerts folder to retrieve"
" the private key from inside the HSM. The process for creating the node "
"MSP folder differs depending on whether you are using a Fabric "
"Certificate Authority (CA) your own CA."
msgstr ""

#: ../../source/hsm.md:115
msgid "Before you begin"
msgstr ""

#: ../../source/hsm.md:117
msgid ""
"Before configuring a Fabric node to use an HSM, you should have completed"
" the following steps:"
msgstr ""

#: ../../source/hsm.md:122
msgid "Using an HSM with a Fabric CA"
msgstr ""

#: ../../source/hsm.md:124
msgid ""
"You can set up a Fabric CA to use an HSM by making the same edits to the "
"CA server configuration file as you would make to a peer or ordering "
"node. Because you can use the Fabric CA to generate keys inside an HSM, "
"the process of creating the local MSP folders is straightforward. Use the"
" following steps:"
msgstr ""

#: ../../source/hsm.md:144
msgid ""
"Then for each node, use the Fabric CA client to generate the peer or "
"ordering node's MSP folder by enrolling against the node identity that "
"you registered in step 2. Instead of storing the private key in the "
"keystore folder of the associated MSP, the enroll command uses the node's"
" HSM to generate and store the private key for the peer or ordering node."
" The keystore folder remains empty."
msgstr ""

#: ../../source/hsm.md:148
msgid "Using an HSM with your own CA"
msgstr ""

#: ../../source/hsm.md:150
msgid ""
"If you are using your own Certificate Authority to deploy Fabric "
"components, you can use an HSM using the following steps:"
msgstr ""

