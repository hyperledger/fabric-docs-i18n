അംഗീകാര നയങ്ങൾ
===================

ഓരോ ചെയിൻ‌കോഡിനും ഒരു അംഗീകാര നയമുണ്ട്, അത് ഒരു ചാനലിലെ സമപ്രായക്കാരുടെ ഗണം വ്യക്തമാക്കുന്നു, അത് ഇടപാട് സാധുവായി കണക്കാക്കുന്നതിന് ചെയിൻ‌കോഡ് എക്സിക്യൂട്ട് ചെയ്യുകയും എക്സിക്യൂഷൻ ഫലങ്ങൾ അംഗീകരിക്കുകയും വേണം. ഈ അംഗീകാര നയങ്ങൾ‌ ഓർ‌ഗനൈസേഷനുകളെ (അവരുടെ സമപ്രായക്കാർ‌ വഴി) നിർ‌വ്വചിക്കുന്നു, അവർ‌ ഒരു നിർ‌ദ്ദേശം നടപ്പിലാക്കുന്നതിന്‌ “അംഗീകരിക്കണം” (അതായത്, അംഗീകരിക്കണം).

.. note :: കീ-മൂല്യ ജോഡികൾ പ്രതിനിധീകരിക്കുന്ന **സ്റ്റേറ്റ് **, ബ്ലോക്ക്ചെയിൻ ഡാറ്റയിൽ നിന്ന് വ്യത്യസ്തമാണെന്ന് ഓർമ്മിക്കുക. ഇതിനെക്കുറിച്ചുള്ള കൂടുതൽ വിവരങ്ങൾക്ക്, ഞങ്ങളുടെ   :doc:`ledger/ledger` ഡോക്യുമെന്റേഷൻ പരിശോധിക്കുക.

പെയറുകള്  നടത്തുന്ന ഇടപാട് മൂല്യനിർണ്ണയ ഘട്ടത്തിന്റെ ഭാഗമായി, ഇടപാടിൽ ഉചിതമായ  **നമ്പർ **  അംഗീകാരങ്ങൾ ഉണ്ടെന്നും അവ പ്രതീക്ഷിച്ച ഉറവിടങ്ങളിൽ നിന്നാണെന്നും ഉറപ്പുവരുത്തുന്നതിനായി ഓരോ മൂല്യനിർണ്ണയ പിയർ പരിശോധിക്കുന്നു (ഇവ രണ്ടും അംഗീകാര നയത്തിൽ വ്യക്തമാക്കിയിരിക്കുന്നു ). അംഗീകാരങ്ങൾ സാധുതയുള്ളതാണെന്ന് ഉറപ്പുവരുത്തുന്നതിനും പരിശോധിക്കുന്നു (അതായത്, അവ സാധുവായ സർട്ടിഫിക്കറ്റുകളിൽ നിന്നുള്ള സാധുവായ ഒപ്പുകളാണെന്ന്).

അംഗീകാരം ആവശ്യമുള്ള ഒന്നിലധികം വഴികൾ
------------------------------------

സ്ഥിരസ്ഥിതിയായി, ചെയിൻ കോഡ് നിർവചനത്തിൽ അംഗീകാര നയങ്ങൾ വ്യക്തമാക്കുന്നു, അത് ചാനൽ അംഗങ്ങൾ അംഗീകരിക്കുകയും തുടർന്ന് ഒരു ചാനലിനോട് പ്രതിജ്ഞാബദ്ധമാവുകയും ചെയ്യുന്നു (അതായത്, ഒരു അംഗീകാര നയം ഒരു ചെയിൻകോഡുമായി ബന്ധപ്പെട്ട എല്ലാ സംസ്ഥാനങ്ങളെയും ഉൾക്കൊള്ളുന്നു).

സ്വകാര്യ ഡാറ്റാ ശേഖരണത്തിനായി, സ്വകാര്യ ഡാറ്റാ ശേഖരണ തലത്തിൽ നിങ്ങൾക്ക് ഒരു അംഗീകാര നയം വ്യക്തമാക്കാനും കഴിയും, ഇത് സ്വകാര്യ ഡാറ്റ ശേഖരണത്തിലെ ഏതെങ്കിലും കീകൾക്കായി ചെയിൻ‌കോഡ് ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് നയത്തെ അസാധുവാക്കും, അതുവഴി ഏത് ഓർ‌ഗനൈസേഷനുകൾ‌ക്ക് ഒരു സ്വകാര്യ ഡാറ്റാ ശേഖരണത്തിലേക്ക് എഴുതാമെന്ന് കൂടുതൽ‌ നിയന്ത്രിക്കും.

അവസാനമായി, ഒരു പ്രത്യേക പബ്ലിക് ചാനൽ സ്റ്റേറ്റ് അല്ലെങ്കിൽ സ്വകാര്യ ഡാറ്റ ശേഖരണ സംസ്ഥാനത്തിന് (ഒരു പ്രത്യേക കീ-മൂല്യ ജോഡി, മറ്റൊരു തരത്തിൽ പറഞ്ഞാൽ) മറ്റൊരു അംഗീകാര നയം ആവശ്യമായി വരുന്ന സാഹചര്യങ്ങളുണ്ട്. ഈ **സ്റ്റേറ്റ് അധിഷ്ഠിത അംഗീകാര** നിർദ്ദിഷ്ട കീകൾക്കായി മറ്റൊരു പോളിസി വഴി ചെയിൻ‌കോഡ്-ലെവൽ അല്ലെങ്കിൽ കളക്ഷൻ ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് പോളിസികളെ അസാധുവാക്കാൻ അനുവദിക്കുന്നു.

വിവിധ തരം അംഗീകാര നയങ്ങൾ ഉപയോഗിക്കേണ്ട സാഹചര്യങ്ങൾ വ്യക്തമാക്കുന്നതിന്, കാറുകൾ കൈമാറ്റം ചെയ്യുന്ന ഒരു ചാനൽ പരിഗണിക്കുക. "സൃഷ്ടിക്കൽ" --- "ഇഷ്യുൻസ്" എന്നും അറിയപ്പെടുന്നു - ഒരു കാറിന്റെ ട്രേഡ് ചെയ്യാവുന്ന ഒരു ആസ്തിയായി (ലോക സ്റ്റേറ്റിലേക്ക് പ്രതിനിധീകരിക്കുന്ന കീ-മൂല്യ ജോഡി, മറ്റൊരു തരത്തിൽ പറഞ്ഞാൽ) ചെയിൻ‌കോഡിനെ തൃപ്തിപ്പെടുത്തേണ്ടതുണ്ട്. ലെവൽ അംഗീകാര നയം. ഒരു ചെയിൻ‌കോഡ്-ലെവൽ‌ അംഗീകാര നയം എങ്ങനെ സജ്ജീകരിക്കാമെന്ന് കാണാൻ, ചുവടെയുള്ള വിഭാഗം പരിശോധിക്കുക.

കാറിനെ പ്രതിനിധീകരിക്കുന്ന കീയ്ക്ക് ഒരു നിർദ്ദിഷ്ട അംഗീകാര നയം ആവശ്യമാണെങ്കിൽ, കാർ സൃഷ്ടിക്കുമ്പോഴോ അതിനുശേഷമോ ഇത് നിർവചിക്കാം. സംസ്ഥാന-നിർദ്ദിഷ്ട അംഗീകാര നയം സജ്ജീകരിക്കുന്നതിന് അത്യാവശ്യമോ അഭികാമ്യമോ ആകുന്നതിന് നിരവധി കാരണങ്ങളുണ്ട്. ലൈസൻസുള്ള ഒരു മൂല്യനിർണ്ണയകന്റെ അംഗീകാരം ആവശ്യമായി വരുന്ന ചരിത്രപരമായ പ്രാധാന്യമോ മൂല്യമോ ഈ കാറിന് ഉണ്ടായിരിക്കാം. കൂടാതെ, കാറിന്റെ ഉടമയും (അവർ ചാനലിലെ അംഗമാണെങ്കിൽ) ഒരു ഇടപാടിൽ അവരുടെ പിയർ സൈൻ ഓഫ് ചെയ്യുന്നുവെന്ന് ഉറപ്പാക്കാനും താൽപ്പര്യപ്പെട്ടേക്കാം. രണ്ട് സാഹചര്യങ്ങളിലും, **ഒരു ചെയിൻകോഡുമായി ബന്ധപ്പെട്ട മറ്റ് അസറ്റുകൾക്കുള്ള സ്ഥിരസ്ഥിതി അംഗീകാര നയങ്ങളിൽ നിന്ന് വ്യത്യസ്തമായ ഒരു പ്രത്യേക അസറ്റിന് ഒരു അംഗീകാര നയം ആവശ്യമാണ്.**

തുടർന്നുള്ള വിഭാഗത്തിൽ സംസ്ഥാന അധിഷ്ഠിത അംഗീകാര നയം എങ്ങനെ നിർവചിക്കാമെന്ന് ഞങ്ങൾ കാണിക്കും. ആദ്യം, ഒരു ചൈൻ‌കോഡ്-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയം ഞങ്ങൾ എങ്ങനെ സജ്ജമാക്കുമെന്ന് നോക്കാം.

ചെയിൻ‌കോഡ്-ലെവൽ‌ അംഗീകാര നയങ്ങൾ‌ സജ്ജമാക്കുന്നു
--------------------------------------------

ചാനൽ‌ അംഗങ്ങൾ‌ അവരുടെ ഓർ‌ഗനൈസേഷനായി ഒരു ചെയിൻ‌കോഡ് നിർ‌വ്വചനം അംഗീകരിക്കുമ്പോൾ‌ ചെയിൻ‌കോഡ് ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങൾ‌ അംഗീകരിക്കുന്നു. ചാനലിനോട് നിർവചനം പ്രതിജ്ഞാബദ്ധമാകുന്നതിന് മുമ്പായി, ചാനൽ അംഗങ്ങളുടെ ഭൂരിപക്ഷം സ്ഥിരസ്ഥിതിയായി സജ്ജീകരിച്ചിരിക്കുന്ന ``ചാനൽ/ആപ്ലിക്കേഷൻ/ലൈഫ് സൈക്കിൾ എൻഡോഴ്സ്മെന്റ്`` നയം പാലിക്കുന്നതിന് മതിയായ എണ്ണം ചാനൽ അംഗങ്ങൾ ഒരു ചെയിൻകോഡ് നിർവചനം അംഗീകരിക്കേണ്ടതുണ്ട്. നിർ‌വ്വചനം പൂർത്തിയായാൽ‌, ചെയിൻ‌കോഡ് ഉപയോഗിക്കാൻ തയ്യാറാണ്. ലെഡ്ജറിലേക്ക് ഡാറ്റ എഴുതുന്ന ചെയിൻ‌കോഡിന്റെ ഏത് ഇൻ‌വോക്കും അംഗീകാര നയം പാലിക്കുന്നതിന് മതിയായ ചാനൽ അംഗങ്ങൾ സാധൂകരിക്കേണ്ടതുണ്ട്.

ഫാബ്രിക് എസ്ഡികെകൾ ഉപയോഗിച്ച് ഒരു ചെയിനോകോഡിനായി നിങ്ങൾക്ക് ഒരു അംഗീകാര നയം വ്യക്തമാക്കാൻ കഴിയും. ഉദാഹരണത്തിന്, നിങ്ങളുടെ ചെയിൻ‌കോഡ് എങ്ങനെ ഇൻസ്റ്റാൾ ചെയ്യാം, ആരംഭിക്കാം <https://hyperledger.github.io/fabric-sdk-node/{BRANCH}/tutorial-chaincode-lifecycle.html>`_  നോഡ്.js SDK ഡോക്യുമെന്റേഷൻ. ``--സിഗ്നേച്ചർ-പോളിസി`` ഫ്ലാഗ് ഉപയോഗിച്ച് ഫാബ്രിക് പിയർ ബൈനറികളുമായി ഒരു ചെയിൻകോഡ് നിർവചനം അംഗീകരിക്കുകയും അംഗീകരിക്കുകയും ചെയ്യുമ്പോൾ നിങ്ങളുടെ സി‌എൽ‌എയിൽ നിന്ന് ഒരു അംഗീകാര നയം സൃഷ്ടിക്കാനും നിങ്ങൾക്ക് കഴിയും.

.. note:: പോളിസി വാക്യഘടനയെക്കുറിച്ച് (``'Org1.member'``, മറ്റുള്ളവ) ഇപ്പോൾ വിഷമിക്കേണ്ട. അടുത്ത വിഭാഗത്തിലെ വാക്യഘടനയെക്കുറിച്ച് ഞങ്ങൾ കൂടുതൽ സംസാരിക്കും.

ഉദാഹരണത്തിന്:

::

    peer lifecycle chaincode approveformyorg --channelID mychannel --signature-policy "AND('Org1.member', 'Org2.member')" --name mycc --version 1.0 --package-id mycc_1:3a8c52d70c36313cfebbaf09d8616e7a6318ababa01c7cbe40603c373bcfe173 --sequence 1 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent

മുകളിലുള്ള കമാൻഡ് ``AND'('Org1.member','Org2.member')`` പോളിസിയോടുകൂടിയ ``mycc`` ന്റെ ചെയിൻ‌കോഡ് നിർ‌വ്വചനം അംഗീകരിക്കുന്നു. ``mycc` എന്നതിന് വേണ്ടത്ര ചാനൽ അംഗങ്ങൾ ഒരു ചെയിൻകോഡ് നിർവചനം അംഗീകരിച്ച ശേഷം, ചുവടെയുള്ള കമാൻഡ് ഉപയോഗിച്ച് ചാനലിനോട് നിർവചനവും അംഗീകാര നയവും സമർപ്പിക്കാൻ കഴിയും:

::

    peer lifecycle chaincode commit -o orderer.example.com:7050 --channelID mychannel --signature-policy "AND('Org1.member', 'Org2.member')" --name mycc --version 1.0 --sequence 1 --init-required --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt

ഐഡന്റിറ്റി ക്ലാസിഫിക്കേഷൻ പ്രാപ്തമാക്കിയിട്ടുണ്ടെങ്കിൽ (കാണുക :doc:`msp` ), സഹപാഠികൾക്ക് മാത്രമായി അംഗീകാരം പരിമിതപ്പെടുത്തുന്നതിന് ഒരാൾക്ക് ``പിയർ`` റോൾ ഉപയോഗിക്കാമെന്നത് ശ്രദ്ധിക്കുക.

ഉദാഹരണത്തിന്:


::

    peer lifecycle chaincode approveformyorg --channelID mychannel --signature-policy "AND('Org1.peer', 'Org2.peer')" --name mycc --version 1.0 --package-id mycc_1:3a8c52d70c36313cfebbaf09d8616e7a6318ababa01c7cbe40603c373bcfe173 --sequence 1 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent

സി‌എൽ‌ഐ അല്ലെങ്കിൽ‌ എസ്‌ഡി‌കെയിൽ‌ നിന്നും ഒരു എൻ‌ഡോഴ്‌സ്മെൻറ് പോളിസി വ്യക്തമാക്കുന്നതിനുപുറമെ, ഒരു ചെയിൻ‌കോഡിന് ചാനൽ കോൺ‌ഫിഗറേഷനിലെ നയങ്ങൾ‌ അംഗീകാര നയങ്ങളായി ഉപയോഗിക്കാനും കഴിയും. ചാനൽ കോൺഫിഗറേഷനും എസിഎല്ലുകളും ഉപയോഗിക്കുന്ന ഫോർമാറ്റിനൊപ്പം ഒരു ചാനൽ നയം തിരഞ്ഞെടുക്കാൻ നിങ്ങൾക്ക് ``--channel-config-policy`` ഫ്ലാഗ് ഉപയോഗിക്കാം.

ഉദാഹരണത്തിന്:

::

    peer lifecycle chaincode approveformyorg --channelID mychannel --channel-config-policy Channel/Application/Admins --name mycc --version 1.0 --package-id mycc_1:3a8c52d70c36313cfebbaf09d8616e7a6318ababa01c7cbe40603c373bcfe173 --sequence 1 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent

നിങ്ങൾ ഒരു നയം വ്യക്തമാക്കിയിട്ടില്ലെങ്കിൽ, ചെയിൻകോഡ് നിർവചനം സ്ഥിരമായി ``ചാനൽ/ആപ്ലിക്കേഷൻ/അംഗീകാര`` നയം ഉപയോഗിക്കും, ഇതിന് ഒരു ഇടപാട് ഭൂരിഭാഗം ചാനൽ അംഗങ്ങളും സാധൂകരിക്കേണ്ടതുണ്ട്. ഈ നയം ചാനലിന്റെ അംഗത്വത്തെ ആശ്രയിച്ചിരിക്കുന്നു, അതിനാൽ ഒരു ചാനലിൽ നിന്ന് ഓർഗനൈസേഷനുകൾ ചേർക്കുമ്പോഴോ നീക്കംചെയ്യുമ്പോഴോ ഇത് യാന്ത്രികമായി അപ്‌ഡേറ്റ് ചെയ്യപ്പെടും. ചാനൽ നയങ്ങൾ ഉപയോഗിക്കുന്നതിന്റെ ഒരു നേട്ടം, ചാനൽ അംഗത്വം ഉപയോഗിച്ച് അവ സ്വയമേവ അപ്‌ഡേറ്റ് ചെയ്യുന്നതിന് എഴുതാം എന്നതാണ്.

``--സിഗ്നേച്ചർ-പോളിസി`` ഫ്ലാഗ് അല്ലെങ്കിൽ എസ്ഡികെ ഉപയോഗിച്ച് നിങ്ങൾ ഒരു അംഗീകാര നയം വ്യക്തമാക്കുകയാണെങ്കിൽ, ഓർഗനൈസേഷനുകൾ ചാനലിൽ ചേരുമ്പോൾ അല്ലെങ്കിൽ പുറത്തുപോകുമ്പോൾ നിങ്ങൾ നയം അപ്‌ഡേറ്റ് ചെയ്യേണ്ടതുണ്ട്. ചെയിൻ‌കോഡ് നിർ‌വ്വചിച്ചതിനുശേഷം ചാനലിലേക്ക് ചേർത്ത ഒരു പുതിയ ഓർ‌ഗനൈസേഷന് ഒരു ചെയിൻ‌കോഡ് ചോദ്യം ചെയ്യാൻ‌ കഴിയും (ചാനൽ‌ നയങ്ങൾ‌ നിർ‌വ്വചിക്കുന്നതുപോലെ ചോദ്യത്തിന് ഉചിതമായ അംഗീകാരവും ചൈൻ‌കോഡ് നടപ്പിലാക്കുന്ന ഏതെങ്കിലും ആപ്ലിക്കേഷൻ ലെവൽ‌ ചെക്കുകളും നൽകിയിട്ടുണ്ടെങ്കിൽ‌) പക്ഷേ അത് നടപ്പിലാക്കാൻ‌ കഴിയില്ല അല്ലെങ്കിൽ‌ ചെയിൻ‌കോഡ് അംഗീകരിക്കുക. അംഗീകാര നയ വാക്യഘടനയിൽ ലിസ്റ്റുചെയ്‌തിരിക്കുന്ന ഓർഗനൈസേഷനുകൾക്ക് മാത്രമേ ഇടപാടുകൾ ഒപ്പിടാൻ കഴിയൂ.

അംഗീകാര നയ വാക്യഘടന
~~~~~~~~~~~~~~~~~~~~~~~~~

നിങ്ങൾക്ക് മുകളിൽ കാണാനാകുന്നതുപോലെ, നയങ്ങൾ പ്രിൻസിപ്പൽമാരുടെ കാര്യത്തിലാണ് പ്രകടിപ്പിക്കുന്നത് ("പ്രിൻസിപ്പൽമാർ" എന്നത് ഒരു റോളുമായി പൊരുത്തപ്പെടുന്ന ഐഡന്റിറ്റികളാണ്). പ്രിൻസിപ്പൽമാരെ ``'MSP.ROLE'`` എന്ന് വിവരിക്കുന്നു, അവിടെ ``MSP`` ആവശ്യമായ MSP ID യെ പ്രതിനിധീകരിക്കുന്നു, കൂടാതെ ``ROLE`` സ്വീകാര്യമായ നാല് റോളുകളിൽ ഒന്നിനെ പ്രതിനിധീകരിക്കുന്നു: ``അംഗം``, ``അഡ്മിൻ``. , ``ക്ലയന്റ്``, ``പിയർ``.

സാധുവായ പ്രിൻസിപ്പൽമാരുടെ കുറച്ച് ഉദാഹരണങ്ങൾ ഇതാ:


  - ``'Org0.admin'``: any administrator of the ``Org0`` MSP
  - ``'Org1.member'``: any member of the ``Org1`` MSP
  - ``'Org1.client'``: any client of the ``Org1`` MSP
  - ``'Org1.peer'``: any peer of the ``Org1`` MSP


ഭാഷയുടെ വാക്യഘടന ഇതാണ്:

``EXPR(E[, E...])``

ഇവിടെ ``EXPR`` ഒന്നുകിൽ  ``AND``, ``OR``,, അല്ലെങ്കിൽ ``OutOf``, & ``E``എന്നിവ ഒന്നുകിൽ ഒരു പ്രിൻസിപ്പൽ (മുകളിൽ വിവരിച്ച വാക്യഘടനയോടുകൂടി) അല്ലെങ്കിൽ മറ്റൊരു നെസ്റ്റഡ് കോൾ ``EXPR``.

ഉദാഹരണത്തിന്:
 - ``AND('Org1.member', 'Org2.member', 'Org3.member')`` മൂന്ന് പ്രിൻസിപ്പൽമാരിൽ നിന്നും ഓരോ ഒപ്പ് അഭ്യർത്ഥിക്കുന്നു.
 - ``OR('Org1.member', 'Org2.member')`` രണ്ട് പ്രിൻസിപ്പൽമാരിൽ ഒരാളിൽ നിന്നും ഒരു ഒപ്പ് അഭ്യർത്ഥിക്കുന്നു.
 - ``OR('Org1.member', AND('Org2.member', 'Org3.member'))`` ഒന്നുകിൽ ``ഓർഗ് 1`` എം‌എസ്‌പി അംഗത്തിൽ നിന്ന് ഒരു ഒപ്പ് അല്ലെങ്കിൽ ഒരു അംഗത്തിൽ നിന്ന് ഒരു ഒപ്പ് അഭ്യർത്ഥിക്കുന്നു ``ഓർഗ് 2` എം‌എസ്‌പിയും ``ഓർഗ് 3`` എം‌എസ്‌പി അംഗത്തിൽ നിന്നുള്ള ഒരു ഒപ്പും.
 - ``OutOf(1, 'Org1.member', 'Org2.member')`` , ഇത്  ``OR('Org1.member', 'Org2.member')`` എന്നതിന് സമാനമായി പരിഹരിക്കുന്നു.
 - അതുപോലെ, ``OutOf (2, 'Org1.member', 'Org2.member') `` എന്നത് `` AND ('Org1.member', 'Org2.member') ``, ``OutOf(2, 'Org1.member', 'Org2.member', 'Org3.member')`` എന്നത്  ``OR(AND('Org1.member', 'Org2.member'), AND('Org1.member', 'Org3.member'), AND('Org2.member', 'Org3.member'))` സമാനമായി പരിഹരിക്കുന്നു. .

ശേഖരണ-തല അംഗീകാര നയങ്ങൾ സജ്ജമാക്കുന്നു
---------------------------------------------
ചെയിൻ‌കോഡ്-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങൾക്ക് സമാനമായി, നിങ്ങൾ‌ ഒരു ചെയിൻ‌കോഡ് നിർ‌വ്വചനം അംഗീകരിക്കുകയും നടപ്പിലാക്കുകയും ചെയ്യുമ്പോൾ‌, നിങ്ങൾക്ക്‌ ചെയിൻ‌കോഡിന്റെ സ്വകാര്യ ഡാറ്റാ ശേഖരണങ്ങളും അനുബന്ധ ശേഖരണ-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങളും വ്യക്തമാക്കാൻ‌ കഴിയും. ഒരു ശേഖരണ-തല അംഗീകാര നയം സജ്ജീകരിച്ചിട്ടുണ്ടെങ്കിൽ, ഒരു സ്വകാര്യ ഡാറ്റ ശേഖരണ കീയിലേക്ക് എഴുതുന്ന ഇടപാടുകൾക്ക് നിർദ്ദിഷ്ട ഓർഗനൈസേഷൻ സമപ്രായക്കാർ ഇടപാടിന് അംഗീകാരം നൽകേണ്ടതുണ്ട്.

സ്വകാര്യ ഡാറ്റാ ശേഖരണ കീ നെയിംസ്‌പെയ്‌സിലേക്ക് ഏതൊക്കെ ഓർഗനൈസേഷൻ സമപ്രായക്കാർക്ക് എഴുതാനാകുമെന്ന് നിയന്ത്രിക്കുന്നതിന് നിങ്ങൾക്ക് ശേഖരണ-തല അംഗീകാര നയങ്ങൾ ഉപയോഗിക്കാം, ഉദാഹരണത്തിന്, അംഗീകൃതമല്ലാത്ത ഓർഗനൈസേഷനുകൾക്ക് ഒരു ശേഖരത്തിലേക്ക് എഴുതാൻ കഴിയില്ലെന്ന് ഉറപ്പുവരുത്തുന്നതിനും ഒരു സ്വകാര്യ ഡാറ്റ ശേഖരണത്തിലെ ഏതെങ്കിലും സംസ്ഥാനം ആവശ്യമായ ശേഖരണ ഓർ‌ഗനൈസേഷൻ‌ (കൾ‌) അംഗീകരിച്ചു.

കളക്ഷൻ-ലെവൽ അംഗീകാര നയം ചെയിൻ‌കോഡ്-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയത്തേക്കാളും ശേഖരണത്തിന്റെ സ്വകാര്യ ഡാറ്റാ വിതരണ നയത്തേക്കാളും നിയന്ത്രണാതീതമോ കൂടുതൽ‌ നിയന്ത്രിതമോ ആകാം. ഉദാഹരണത്തിന്, ഒരു ചെയിൻ‌കോഡ് ഇടപാട് അംഗീകരിക്കുന്നതിന് ഭൂരിഭാഗം ഓർ‌ഗനൈസേഷനുകളും ആവശ്യമായി വന്നേക്കാം, പക്ഷേ ഒരു നിർ‌ദ്ദിഷ്‌ട ശേഖരത്തിൽ‌ ഒരു കീ ഉൾ‌ക്കൊള്ളുന്ന ഒരു ഇടപാട് അംഗീകരിക്കുന്നതിന് ഒരു നിർ‌ദ്ദിഷ്‌ട ഓർ‌ഗനൈസേഷൻ‌ ആവശ്യമായി വന്നേക്കാം.

കളക്ഷൻ-ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് പോളിസികൾ‌ക്കുള്ള വാക്യഘടന ചെയിൻ‌കോഡ്-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് പോളിസികൾ‌ക്കുള്ള വാക്യഘടനയുമായി കൃത്യമായി പൊരുത്തപ്പെടുന്നു --- ശേഖരണ കോൺ‌ഫിഗറേഷനിൽ‌ നിങ്ങൾക്ക് ഒരു ``സിഗ്‌നേച്ചർ‌പോളിസി`` അല്ലെങ്കിൽ ``ചാനൽ‌കോൺ‌ഫിഗ്‌പോളിസി`` ഉപയോഗിച്ച് `` എൻ‌ഡോഴ്‌സ്മെൻറ് പോളിസി`` വ്യക്തമാക്കാം. കൂടുതൽ വിവരങ്ങൾക്ക് കാണുക  :doc:`private-data-arch`

.. _key-level-endorsement:

കീ-ലെവൽ അംഗീകാര നയങ്ങൾ സജ്ജമാക്കുന്നു
--------------------------------------

പതിവ് ചെയിൻ‌കോഡ്-ലെവൽ‌ അല്ലെങ്കിൽ‌ ശേഖരണ-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങൾ‌ ക്രമീകരിക്കുന്നത് അനുബന്ധ ചെയിൻ‌കോഡിന്റെ ജീവിതചക്രവുമായി ബന്ധപ്പെട്ടിരിക്കുന്നു. ഒരു ചാനലിലെ ചെയിൻ‌കോഡ് നിർ‌വ്വചിക്കുമ്പോൾ‌ മാത്രമേ അവ സജ്ജീകരിക്കാനോ പരിഷ്‌ക്കരിക്കാനോ കഴിയൂ.

ഇതിനു വിപരീതമായി, കീ-ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങൾ‌ ഒരു ചെയിൻ‌കോഡിനുള്ളിൽ‌ നിന്നും കൂടുതൽ‌ ഗ്രാനുലാർ‌ രീതിയിൽ സജ്ജീകരിക്കാനും പരിഷ്‌ക്കരിക്കാനും കഴിയും. ഒരു സാധാരണ ഇടപാടിന്റെ റീഡ്-റൈറ്റ് സെറ്റിന്റെ ഭാഗമാണ് പരിഷ്‌ക്കരണം.

ഒരു സാധാരണ കീയിൽ നിന്ന് / ഒരു അംഗീകാര നയം സജ്ജീകരിക്കുന്നതിനും വീണ്ടെടുക്കുന്നതിനും ഷിം API ഇനിപ്പറയുന്ന പ്രവർത്തനങ്ങൾ നൽകുന്നു. രണ്ട് രീതികളും അടിസ്ഥാന ഷിം API ഉപയോഗിക്കാൻ‌ കഴിയുന്ന അംഗീകാര നയത്തിന്റെ ഒരു ബൈനറി പതിപ്പ് സൃഷ്‌ടിക്കും.

.. note:: ചുവടെയുള്ള ``ep`` എന്നത് "അംഗീകാര നയം" എന്നതിനെയാണ് സൂചിപ്പിക്കുന്നത്, മുകളിൽ വിവരിച്ച അതേ വാക്യഘടന ഉപയോഗിച്ചോ അല്ലെങ്കിൽ ചുവടെ വിവരിച്ചിരിക്കുന്ന സൗകര്യപ്രദമായ ഫംഗ്ഷൻ ഉപയോഗിച്ചോ ഇത് പ്രകടിപ്പിക്കാം. രണ്ട് രീതികളും അടിസ്ഥാന ഷിം API ഉപയോഗിക്കാൻ‌ കഴിയുന്ന അംഗീകാര നയത്തിന്റെ ഒരു ബൈനറി പതിപ്പ് സൃഷ്‌ടിക്കും.

.. code-block:: Go

    SetStateValidationParameter(key string, ep []byte) error
    GetStateValidationParameter(key string) ([]byte, error)

ഇതിന്റെ ഭാഗമായ കീകൾ‌ക്കായി  :doc:`private-data/private-data` ഇനിപ്പറയുന്ന പ്രവർ‌ത്തനങ്ങൾ‌ ബാധകമാണ്:

.. code-block:: Go

    SetPrivateDataValidationParameter(collection, key string, ep []byte) error
    GetPrivateDataValidationParameter(collection, key string) ([]byte, error)

അംഗീകാര നയങ്ങൾ സജ്ജീകരിക്കുന്നതിനും അവയെ മൂല്യനിർണ്ണയ പാരാമീറ്റർ ബൈറ്റ് അറേകളിലേക്ക് മാർഷൽ ചെയ്യുന്നതിനും സഹായിക്കുന്നതിന്, ഓർ‌ഗനൈസേഷനുകളുടെ എം‌എസ്‌പി ഐഡന്റിഫയറുകളുടെ അടിസ്ഥാനത്തിൽ അംഗീകാര നയങ്ങൾ കൈകാര്യം ചെയ്യാൻ ചെയിൻ‌കോഡ് ഡവലപ്പറെ അനുവദിക്കുന്ന സൗകര്യപ്രദമായ ഫംഗ്ഷനുകളുള്ള ഒരു വിപുലീകരണം ഗോ ഷിം നൽകുന്നു, `കീ എൻ‌ഡോർ‌സ്മെൻറ് പോളിസി <https: // godoc.org/github.com/hyperledger/fabric-chaincode-go/pkg/statebased#KeyEndorsementPolicy>`_:

.. code-block:: Go

    type KeyEndorsementPolicy interface {
        // Policy returns the endorsement policy as bytes
        Policy() ([]byte, error)

        // AddOrgs adds the specified orgs to the list of orgs that are required
        // to endorse
        AddOrgs(roleType RoleType, organizations ...string) error

        // DelOrgs delete the specified channel orgs from the existing key-level endorsement
        // policy for this KVS key. If any org is not present, an error will be returned.
        DelOrgs(organizations ...string) error

        // ListOrgs returns an array of channel orgs that are required to endorse changes
        ListOrgs() ([]string)
    }

ഉദാഹരണത്തിന്, കീ മാറ്റം അംഗീകരിക്കുന്നതിന് രണ്ട് നിർദ്ദിഷ്ട ഓർഗുകൾ ആവശ്യമുള്ള ഒരു കീയ്‌ക്കായി ഒരു അംഗീകാര നയം സജ്ജീകരിക്കുന്നതിന്, org ``MSPID- കൾ `` ,  ``AddOrgs()`` ലേക്ക് കൈമാറുക, തുടർന്ന് ``Policy()`` എന്ന് വിളിക്കുക. ``SetStateValidationParameter()``  എന്നതിലേക്ക് കൈമാറാൻ കഴിയുന്ന അംഗീകാര നയ ബൈറ്റ് അറേ നിർമ്മിക്കുന്നതിന്.

നിങ്ങളുടെ ചൈൻ‌കോഡിലേക്ക് ഒരു ആശ്രയത്വമായി ഷിം വിപുലീകരണം ചേർക്കുന്നതിന്, കാണുക  :ref:`vendoring`.

മൂല്യനിർണ്ണയം
----------

പ്രതിജ്ഞാബദ്ധമായ സമയത്ത്, ഒരു കീയുടെ മൂല്യം ക്രമീകരിക്കുന്നത് ഒരു കീയുടെ അംഗീകാര നയം സജ്ജീകരിക്കുന്നതിൽ നിന്ന് വ്യത്യസ്തമല്ല --- രണ്ടും കീയുടെ അവസ്ഥ അപ്‌ഡേറ്റ് ചെയ്യുകയും ഒരേ നിയമങ്ങളെ അടിസ്ഥാനമാക്കി സാധൂകരിക്കുകയും ചെയ്യുന്നു.

+---------------------+------------------------------------+--------------------------+
| Validation          | no validation parameter set        | validation parameter set |
+=====================+====================================+==========================+
| modify value        | check chaincode or collection ep   | check key-level ep       |
+---------------------+------------------------------------+--------------------------+
| modify key-level ep | check chaincode or collection ep   | check key-level ep       |
+---------------------+------------------------------------+--------------------------+

+---------------------+------------------------------------+--------------------------+
|  മൂല്യനിർണ്ണയം                           |       മൂല്യനിർണ്ണയ പാരാമീറ്റർ സജ്ജമാക്കിയിട്ടില്ല                |       മൂല്യനിർണ്ണയ പാരാമീറ്റർ സെറ്റ്          |
+=====================+====================================+==========================+
| മൂല്യം പരിഷ്‌ക്കരിക്കുക                  | ചെയിൻ‌കോഡ് അല്ലെങ്കിൽ‌ ep ശേഖരം പരിശോധിക്കുക  |         കീ-ലെവൽ ep പരിശോധിക്കുക      |
+---------------------+------------------------------------+--------------------------+
| കീ-ലെവൽ ep പരിഷ്‌ക്കരിക്കുക   |      ചെയിൻ‌കോഡ് അല്ലെങ്കിൽ‌ ശേഖരം പരിശോധിക്കുക    |       കീ-ലെവൽ ep പരിശോധിക്കുക       |
+---------------------+------------------------------------+--------------------------+



ഞങ്ങൾ മുകളിൽ ചർച്ച ചെയ്തതുപോലെ, ഒരു കീ പരിഷ്‌ക്കരിക്കുകയും കീ-ലെവൽ അംഗീകാര നയമൊന്നും നിലവിലില്ലെങ്കിൽ, ചെയിൻ‌കോഡ്-ലെവൽ അല്ലെങ്കിൽ കളക്ഷൻ ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് നയം സ്ഥിരസ്ഥിതിയായി ബാധകമാണ്. ഒരു കീയ്ക്കായി ആദ്യമായി ഒരു കീ-ലെവൽ അംഗീകാര നയം സജ്ജമാക്കുമ്പോഴും ഇത് ശരിയാണ് --- പുതിയ കീ-ലെവൽ അംഗീകാര നയം ആദ്യം നിലവിലുള്ള ചെയിൻ‌കോഡ് ലെവൽ അല്ലെങ്കിൽ കളക്ഷൻ ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് പോളിസി അനുസരിച്ച് അംഗീകരിക്കണം.

ഒരു കീ പരിഷ്‌ക്കരിക്കുകയും ഒരു കീ-ലെവൽ അംഗീകാര നയം നിലവിലുണ്ടെങ്കിൽ, കീ-ലെവൽ അംഗീകാര നയം ചെയിൻ‌കോഡ്-ലെവൽ അല്ലെങ്കിൽ കളക്ഷൻ ലെവൽ എൻ‌ഡോഴ്സ്മെൻറ് നയത്തെ അസാധുവാക്കുന്നു. പ്രായോഗികമായി, കീ-ലെവൽ അംഗീകാര നയം ചെയിൻ‌കോഡ്-ലെവൽ‌ അല്ലെങ്കിൽ‌ കളക്ഷൻ‌ ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് നയങ്ങളേക്കാൾ‌ കുറഞ്ഞ നിയന്ത്രണമോ അല്ലെങ്കിൽ‌ കൂടുതൽ‌ നിയന്ത്രണമോ ആകാം എന്നാണ് ഇതിനർത്ഥം. ഒരു കീ-ലെവൽ‌ അംഗീകാര നയം ആദ്യമായി സജ്ജീകരിക്കുന്നതിന് ചെയിൻ‌കോഡ്-ലെവൽ‌ അല്ലെങ്കിൽ‌ കളക്ഷൻ‌ ലെവൽ‌ എൻ‌ഡോഴ്‌സ്മെൻറ് പോളിസി തൃപ്‌തിപ്പെടുത്തേണ്ടതിനാൽ‌, വിശ്വാസപരമായ അനുമാനങ്ങളൊന്നും ലംഘിച്ചിട്ടില്ല.

ഒരു കീയുടെ അംഗീകാര നയം നീക്കംചെയ്‌താൽ (ശൂന്യമായി സജ്ജമാക്കുക), ചെയിൻ‌കോഡ്-ലെവൽ അല്ലെങ്കിൽ കളക്ഷൻ-ലെവൽ എൻ‌ഡോഴ്‌സ്മെന്റ് നയം വീണ്ടും സ്ഥിരസ്ഥിതിയാകും.

വിവിധ അനുബന്ധ കീ-ലെവൽ അംഗീകാര നയങ്ങളുമായി ഒരു ഇടപാട് ഒന്നിലധികം കീകൾ പരിഷ്കരിക്കുകയാണെങ്കിൽ, ഇടപാട് സാധുതയുള്ളതാകുന്നതിന് ഈ നയങ്ങളെല്ലാം തൃപ്തിപ്പെടുത്തേണ്ടതുണ്ട്.

.. ക്രിയേറ്റീവ് കോമൺസ് ആട്രിബ്യൂഷൻ 4.0 അന്താരാഷ്ട്ര ലൈസൻസിന് കീഴിൽ ലൈസൻസ് നേടി
 https://creativecommons.org/licenses/by/4.0/
