链码教程
===================

什么是链码？
------------------

链码是一个程序，可以使用 `Go <https://golang.org>`_ 、`node.js <https://nodejs.org>`_ 、
或者 `Java <https://java.com/en/>`_ 来实现预定义的接口。链码运行在一个和背书节点进程相
隔离的安全的容器中。通过应用程序提交交易来初始化链码和管理账本状态。

一个链码一般用来处理由网络中成员一致认可的商业逻辑，所以可以认为它就是一个“智能合约”。
链码创建的状态仅限于该链码范围内，其他链码不能直接访问。但是在同一个网络中，通过合理
的授权，链码可以让其他链码访问的它状态数据。

两种角色
------------

我们提供了从两种视角来看链码。第一中，从区块链应用或者解决方案开发这的视角的标题为
:doc:`chaincode4ade` 另外一个 :doc:`chaincode4noah` 面向管理区块链网络的维护人员，
他们将使用 Hyperledger Fabric 的 API 来安装、治理链码，但是在开发链码应用的
过程很少调用链码。

Fabric 链码生命周期
------------------------------

链码生命周期负责在链码应用到通道之前管理链码的安装和参数的定义。从 Fabric 2.0 开始，链码的治理完全去中心化了：多个组织可以使用 Fabric 链码生命周期来一致同意链码的参数，比如在链码应用到账本用于交互之前的背书策略。

新的模型比之前的生命周期有了一些改进：

* **多个组织必须一致同意链码参数：**在 Fabric 1.x 的发布版本中，一个组织可以为为所有其他通道成员设置链码参数（例如背书策略）。新的 Fabric 链码生命周期更灵活了，它支持中心化的信任模型（类似之前的生命周期）和去中心化的模型，去中心化的模型需要链码生效之前有足够数量的组织同意背书策略。

* **更安全的链码升级过程：**在之前的链码生命周期中，升级交易可以由单个组织发出，增加了还没有安装新链码的通道成员的风险。新的模型要求只有足够数量的组织批准才可以升级链码。

* **更简化的背书策略更新：**Fabric 生命周期可以让你在不重新打包或重新安装链码的情况下修改背书策略。用户也可以使用默认的策略来请求背书，即通道中的大多数成员。该策略会在通道中增加或移除组织时自动更新。

* **可检查链码包：**Fabric 生命周期将链码打包为易读的 tar 文件。这样就可以更简单的检查链码包以及协调跨多组织的安装。

* **在通道上使用一个包启动多个链码：**之前的生命周期定义了通道上的每个链码在安装链码包时都使用一个名字和版本来标识。你现在可以将一个链码包使用不同的名字在相同或者不同的通道上部署多次。

要学习更多 Fabric 生命周期的内容，请参考 :doc:`chaincode4noah`。

你可以通过创建新通道并设置通道兼容 V2_0 来使用 Fabric 链码生命周期。开启了 V2_0 的兼容你就不能再在通道上使用旧的生命周期来安装、实例化或者升级链码了。然而，开启了 V2_0 的兼容之后，你仍可以使用之前的生命周期调用已经安装的链码。

.. Licensed under Creative Commons Attribution 4.0 International License
   https://creativecommons.org/licenses/by/4.0/
