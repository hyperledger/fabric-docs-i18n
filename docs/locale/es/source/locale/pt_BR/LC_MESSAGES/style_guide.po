# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-24 19:11-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/style_guide.md:1
msgid "Documentation style guide for contributors"
msgstr ""

#: ../../source/style_guide.md:3
msgid "Audience: documentation writers and editors"
msgstr ""

#: ../../source/style_guide.md:5
msgid ""
"While this style guide will also refer to best practices using "
"ReStructured Text (also known as RST), in general we advise writing "
"documentation in Markdown, as it's a more universally accepted "
"documentation standard. Both formats are usable, however, and if you "
"decide to write a topic in RST (or are editing an RST topic), be sure to "
"refer to this style guide."
msgstr ""

#: ../../source/style_guide.md:7
msgid ""
"When in doubt, use the docs themselves for guidance on how to format "
"things."
msgstr ""

#: ../../source/style_guide.md:9
msgid "For RST formatting."
msgstr ""

#: ../../source/style_guide.md:11
msgid "For Markdown formatting."
msgstr ""

#: ../../source/style_guide.md:13
msgid ""
"If you just want to look at how things are formatted, you can navigate to"
" the Fabric repo to look at the raw file by clicking on Edit on Github "
"link in the upper right hand corner of the page. Then click the Raw tab. "
"This will show you the formatting of the doc. Do not attempt to edit the "
"file on Github. If you want to make a change, clone the repo and follow "
"the instructions in Contributing for creating pull requests."
msgstr ""

#: ../../source/style_guide.md:15
msgid "Line lengths."
msgstr ""

#: ../../source/style_guide.md:17
msgid ""
"If you look at the raw versions of the documentation, you will see that "
"many topics conform to a line length of roughly 70 characters. This "
"restriction is no longer necessary, so you are free to make lines as long"
" as you want."
msgstr ""

#: ../../source/style_guide.md:19
msgid "Tutorials should have a list of steps at the top."
msgstr ""

#: ../../source/style_guide.md:21
msgid ""
"A list of steps (with links to the corresponding sections) at the "
"beginning of a tutorial helps users find particular steps they're "
"interested in. For an example, check out Use private data in Fabric."
msgstr ""

#: ../../source/style_guide.md:23
msgid "\"Fabric\", \"Hyperledger Fabric\" or \"HLF\"?"
msgstr ""

#: ../../source/style_guide.md:25
msgid ""
"The first usage should be “Hyperledger Fabric” and afterwards only "
"“Fabric”. Don't use \"HLF\" or \"Hyperledger\" by itself."
msgstr ""

#: ../../source/style_guide.md:27
msgid "Chaincode vs. Chaincodes?"
msgstr ""

#: ../../source/style_guide.md:29
msgid ""
"One chaincode is a “chaincode”. If you’re talking about several "
"chaincodes, use \"chaincodes\"."
msgstr ""

#: ../../source/style_guide.md:31
msgid "When to bold?"
msgstr ""

#: ../../source/style_guide.md:33
msgid ""
"Not too often. The best use of them is either as a summary or as a way of"
" drawing attention to concepts you want to talk about. “A blockchain "
"network contains a ledger, at least one chaincode, and peers”, especially"
" if you’re going to be talking about those things in that paragraph. "
"Avoid using them simply to emphasize a single word, as in something like "
"\"Blockchain networks must use propery security protocols\"."
msgstr ""

#: ../../source/style_guide.md:35
msgid "When to surround something in back tics nnn?"
msgstr ""

#: ../../source/style_guide.md:37
msgid ""
"This is useful to draw attention to words that either don’t make sense in"
" plain English or when referencing parts of the code (especially if "
"you’ve put code snippets in your doc). So for example, when talking about"
" the fabric-samples directory, surround fabric-samples with back tics. "
"Same with a code function like hf.Revoker. It might also make sense to "
"put back tics around words that do make sense in plain English that are "
"part of the code if you're referencing them in a code context. For "
"example, when referencing an attribute as part of an Access Control List."
msgstr ""

#: ../../source/style_guide.md:39
msgid "Is it ever appropriate to use a dash?"
msgstr ""

#: ../../source/style_guide.md:41
msgid ""
"Dashes can be incredibly useful but they're not necessarily as "
"technically appropriate as using separate declarative sentences. Let's "
"consider this example sentence:"
msgstr ""

#: ../../source/style_guide.md:47
msgid ""
"There are a number of ways to present this same information, but in this "
"case the dashes break up the information while keeping it as part of the "
"same thought. If you use a dash, make sure to use the \"em\" dash, which "
"is three times longer than a hyphen. These dashes should have a space "
"before and after them."
msgstr ""

#: ../../source/style_guide.md:49
msgid "When to use hyphens?"
msgstr ""

#: ../../source/style_guide.md:51
msgid ""
"Hyphens are mostly commonly used as part of a “compound adjective”. For "
"example, \"jet-powered car\". Note that the compound adjective must "
"immediately precede the noun being modified. In other words, \"jet "
"powered\" does not by itself need a hyphen. When in doubt, use Google, as"
" compound adjectives are tricky and are a popular discussion on grammar "
"discussion boards."
msgstr ""

#: ../../source/style_guide.md:53
msgid "How many spaces after a period?"
msgstr ""

#: ../../source/style_guide.md:55
msgid "One."
msgstr ""

#: ../../source/style_guide.md:57
msgid "How should numbers be rendered?"
msgstr ""

#: ../../source/style_guide.md:59
msgid ""
"Number zero through nine are spelled out. One, two, three, four, etc. "
"Numbers after 10 are rendered as numbers."
msgstr ""

#: ../../source/style_guide.md:61
msgid ""
"Exceptions to this would be usages from code. In that case, use "
"whatever’s in the code. And also examples like Org1. Don’t write it as "
"OrgOne."
msgstr ""

#: ../../source/style_guide.md:63
msgid "Try to avoid using the same words too often."
msgstr ""

#: ../../source/style_guide.md:65
msgid ""
"If you can avoid using a word twice in one sentence, please do so. Not "
"using it more than twice in a single paragraph is better. Of course "
"sometimes it might not be possible to avoid this –-- a doc about stateDB "
"is likely to be replete with uses of the word “database” or “ledger”. But"
" excessive usage of any particular word has a tendency to have a numbing "
"effect on the reader."
msgstr ""

#: ../../source/style_guide.md:67
msgid "How should files be named?"
msgstr ""

#: ../../source/style_guide.md:69
msgid ""
"For example, identity_use_case_tutorial.md. While not all files use this "
"standard, new files should adhere to it."
msgstr ""

#: ../../source/style_guide.md:71
msgid "Capitalization rules for doc titles."
msgstr ""

#: ../../source/style_guide.md:73
msgid ""
"The standard rules for capitalization in sentences should be followed. In"
" other words, unless a word is the first word in the title or a proper "
"noun, do not capitalize its first letter. For example, \"Understanding "
"Identities in Fabric\" should be \"Understanding identities in Fabric\". "
"While not every doc follows this standard yet, it is the standard we're "
"moving to and should be followed for new topics."
msgstr ""

#: ../../source/style_guide.md:75
msgid "Headings inside of topics should follow the same standard."
msgstr ""

#: ../../source/style_guide.md:77
msgid "Use the Oxford comma?"
msgstr ""

#: ../../source/style_guide.md:79
msgid "Yes, it’s better."
msgstr ""

#: ../../source/style_guide.md:81
msgid ""
"For example: “I’d like to thank my parents, Ayn Rand and God”. Compared "
"to: “I’d like to thank my parents, Ayn Rand, and God.”"
msgstr ""

#: ../../source/style_guide.md:83
msgid "JSON vs .json?"
msgstr ""

#: ../../source/style_guide.md:85
msgid "Use “JSON”. The same applies for any file format (for example, YAML)."
msgstr ""

#: ../../source/style_guide.md:87
msgid "Referring to the reader."
msgstr ""

#: ../../source/style_guide.md:89
msgid "It’s perfectly fine to use the word “you” or “we”."
msgstr ""

#: ../../source/style_guide.md:91
msgid "Ampersands (&)."
msgstr ""

#: ../../source/style_guide.md:93
msgid ""
"Not a substitute for the word “and”. Avoid them unless you have a reason "
"to use it (such as in a code snippet that includes it)."
msgstr ""

#: ../../source/style_guide.md:95
msgid "Acronyms."
msgstr ""

#: ../../source/style_guide.md:97
msgid ""
"The first usage of an acronym should be spelled out, unless it’s an "
"acronym that’s in such wide usage this is unneeded. For example, "
"“Software Development Kit (SDK)” on first usage. Then use “SDK” "
"afterward."
msgstr ""

#: ../../source/style_guide.md:99
msgid "Captions."
msgstr ""

#: ../../source/style_guide.md:101
msgid ""
"These should be in italics, and it’s the only real valid use for italics "
"in our docs."
msgstr ""

#: ../../source/style_guide.md:103
msgid "Commands."
msgstr ""

#: ../../source/style_guide.md:105
msgid ""
"In general, put each command in its own snippet. It reads better, "
"especially when commands are long. An exception to this rule is when "
"suggesting the export of a number of environment variables."
msgstr ""

#: ../../source/style_guide.md:107
msgid "Code snippets."
msgstr ""

#: ../../source/style_guide.md:109
msgid ""
"In Markdown, if you want to post sample code, use three back tics to set "
"off the snippet. For example:"
msgstr ""

#: ../../source/style_guide.md:119
msgid ""
"In RST, you will need to set off the code snippet using formatting "
"similar to this:"
msgstr ""

#: ../../source/style_guide.md:127
msgid "You can substitute bash for a language like Java or Go, where appropriate."
msgstr ""

#: ../../source/style_guide.md:129
msgid "Enumerated lists in markdown."
msgstr ""

#: ../../source/style_guide.md:131
msgid ""
"Note that in Markdown, enumerated lists will not work if you separate the"
" numbers with a space. Markdown sees this as the start of a new list, not"
" a continuation of the old one (every number will be 1.). If you need an "
"enumerated list, you will have to use RST. Bulleted lists are a good "
"substitute in Markdown, and are the recommended alternative."
msgstr ""

#: ../../source/style_guide.md:133
msgid "Linking."
msgstr ""

#: ../../source/style_guide.md:135
msgid ""
"When linking to another doc, use relative links, not direct links. When "
"naming a link, do not just call it \"link\". Use a more creative and "
"descriptive name. For accessibility reasons, the link name should also "
"make it clear that it is a link. For example, check out this link to "
"Google."
msgstr ""

#: ../../source/style_guide.md:137
msgid "curl vs cURL."
msgstr ""

#: ../../source/style_guide.md:139
msgid "The tool is called “cURL”. The commands themselves are “curl” commands."
msgstr ""

#: ../../source/style_guide.md:141
msgid "Fabric CA."
msgstr ""

#: ../../source/style_guide.md:143
msgid ""
"Do not call it \"fabric-CA\", \"fabricCA\", or FabricCA. It is the Fabric"
" CA."
msgstr ""

#: ../../source/style_guide.md:145
msgid "Raft and RAFT."
msgstr ""

#: ../../source/style_guide.md:147
msgid "\"Raft\" is not an acronym. Do not call it a \"RAFT ordering service\"."
msgstr ""

#: ../../source/style_guide.md:149
msgid "All docs have to end with a license statement."
msgstr ""

#: ../../source/style_guide.md:151
msgid "In RST, it’s this:"
msgstr ""

#: ../../source/style_guide.md:158
msgid "In markdown:"
msgstr ""

#: ../../source/style_guide.md:165
msgid "How many spaces for indentation?"
msgstr ""

#: ../../source/style_guide.md:167
msgid ""
"Depends on the use case, I suppose. Frequently it’s necessary, especially"
" in RST, to indent two spaces, especially in a code block. In a NOTE box "
"in RST, you have to indent to the space after the colon after note, like "
"this:"
msgstr ""

#: ../../source/style_guide.md:174
msgid "When to use which type of heading."
msgstr ""

#: ../../source/style_guide.md:176
msgid "Check out this topic on headings."
msgstr ""

#: ../../source/style_guide.md:178
msgid "In RST, use this:"
msgstr ""

#: ../../source/style_guide.md:194
msgid ""
"Note that the length of what’s under the title has to be the same as the "
"length of the title itself. This isn’t a problem in Atom, which gives "
"each character the same width by default (this is called “monospacing”, "
"if you’re ever on Jeopardy! and need that information."
msgstr ""

#: ../../source/style_guide.md:196
msgid "In markdown, it’s somewhat simpler. You go:"
msgstr ""

#: ../../source/style_guide.md:206
msgid ""
"Both file formats don't like when these things are done out of order. For"
" example, you might want a #### to be the first thing after your # Title."
" Markdown won’t allow it. Similarly, RST will default to whatever order "
"you give to the title formats (as they appear in the first sections of "
"your doc)."
msgstr ""

#~ msgid "Documentation style guide for contributors"
#~ msgstr ""

#~ msgid "Audience: documentation writers and editors"
#~ msgstr ""

#~ msgid ""
#~ "When in doubt, use the docs "
#~ "themselves for guidance on how to "
#~ "format things."
#~ msgstr ""

#~ msgid "For RST formatting."
#~ msgstr ""

#~ msgid "For Markdown formatting."
#~ msgstr ""

#~ msgid ""
#~ "If you just want to look at "
#~ "how things are formatted, you can "
#~ "navigate to the Fabric repo to "
#~ "look at the raw file by clicking"
#~ " on Edit on Github link in the"
#~ " upper right hand corner of the "
#~ "page. Then click the Raw tab. This"
#~ " will show you the formatting of "
#~ "the doc. Do not attempt to edit"
#~ " the file on Github. If you "
#~ "want to make a change, clone the"
#~ " repo and follow the instructions in"
#~ " Contributing for creating pull requests."
#~ msgstr ""

#~ msgid "Line lengths."
#~ msgstr ""

#~ msgid "Tutorials should have a list of steps at the top."
#~ msgstr ""

#~ msgid ""
#~ "A list of steps (with links to "
#~ "the corresponding sections) at the "
#~ "beginning of a tutorial helps users "
#~ "find particular steps they're interested "
#~ "in. For an example, check out Use"
#~ " private data in Fabric."
#~ msgstr ""

#~ msgid "\"Fabric\", \"Hyperledger Fabric\" or \"HLF\"?"
#~ msgstr ""

#~ msgid "Chaincode vs. Chaincodes?"
#~ msgstr ""

#~ msgid "When to bold?"
#~ msgstr ""

#~ msgid ""
#~ "Not too often. The best use of "
#~ "them is either as a summary or "
#~ "as a way of drawing attention to"
#~ " concepts you want to talk about. "
#~ "“A blockchain network contains a ledger,"
#~ " at least one chaincode, and peers”,"
#~ " especially if you’re going to be "
#~ "talking about those things in that "
#~ "paragraph. Avoid using them simply to"
#~ " emphasize a single word, as in "
#~ "something like \"Blockchain networks must "
#~ "use propery security protocols\"."
#~ msgstr ""

#~ msgid "When to surround something in back tics nnn?"
#~ msgstr ""

#~ msgid ""
#~ "This is useful to draw attention "
#~ "to words that either don’t make "
#~ "sense in plain English or when "
#~ "referencing parts of the code "
#~ "(especially if you’ve put code snippets"
#~ " in your doc). So for example, "
#~ "when talking about the fabric-samples"
#~ " directory, surround fabric-samples with"
#~ " back tics. Same with a code "
#~ "function like hf.Revoker. It might also"
#~ " make sense to put back tics "
#~ "around words that do make sense in"
#~ " plain English that are part of "
#~ "the code if you're referencing them "
#~ "in a code context. For example, "
#~ "when referencing an attribute as part"
#~ " of an Access Control List."
#~ msgstr ""

#~ msgid "Is it ever appropriate to use a dash?"
#~ msgstr ""

#~ msgid "When to use hyphens?"
#~ msgstr ""

#~ msgid "How many spaces after a period?"
#~ msgstr ""

#~ msgid "How should numbers be rendered?"
#~ msgstr ""

#~ msgid "Try to avoid using the same words too often."
#~ msgstr ""

#~ msgid "How should files be named?"
#~ msgstr ""

#~ msgid ""
#~ "For example, identity_use_case_tutorial.md. While"
#~ " not all files use this standard, "
#~ "new files should adhere to it."
#~ msgstr ""

#~ msgid "Capitalization rules for doc titles."
#~ msgstr ""

#~ msgid "Use the Oxford comma?"
#~ msgstr ""

#~ msgid "JSON vs .json?"
#~ msgstr ""

#~ msgid "Referring to the reader."
#~ msgstr ""

#~ msgid "Ampersands (&)."
#~ msgstr ""

#~ msgid "Acronyms."
#~ msgstr ""

#~ msgid "Captions."
#~ msgstr ""

#~ msgid "Commands."
#~ msgstr ""

#~ msgid "Code snippets."
#~ msgstr ""

#~ msgid ""
#~ "You can substitute bash for a "
#~ "language like Java or Go, where "
#~ "appropriate."
#~ msgstr ""

#~ msgid "Enumerated lists in markdown."
#~ msgstr ""

#~ msgid ""
#~ "Note that in Markdown, enumerated lists"
#~ " will not work if you separate "
#~ "the numbers with a space. Markdown "
#~ "sees this as the start of a "
#~ "new list, not a continuation of "
#~ "the old one (every number will be"
#~ " 1.). If you need an enumerated "
#~ "list, you will have to use RST."
#~ " Bulleted lists are a good substitute"
#~ " in Markdown, and are the recommended"
#~ " alternative."
#~ msgstr ""

#~ msgid "Linking."
#~ msgstr ""

#~ msgid ""
#~ "When linking to another doc, use "
#~ "relative links, not direct links. When"
#~ " naming a link, do not just "
#~ "call it \"link\". Use a more "
#~ "creative and descriptive name. For "
#~ "accessibility reasons, the link name "
#~ "should also make it clear that it"
#~ " is a link. For example, check "
#~ "out this link to Google."
#~ msgstr ""

#~ msgid "curl vs cURL."
#~ msgstr ""

#~ msgid "Fabric CA."
#~ msgstr ""

#~ msgid "Raft and RAFT."
#~ msgstr ""

#~ msgid "All docs have to end with a license statement."
#~ msgstr ""

#~ msgid "How many spaces for indentation?"
#~ msgstr ""

#~ msgid "When to use which type of heading."
#~ msgstr ""

#~ msgid "Check out this topic on headings."
#~ msgstr ""

#~ msgid ""
#~ "Both file formats don't like when "
#~ "these things are done out of "
#~ "order. For example, you might want "
#~ "a #### to be the first thing "
#~ "after your # Title. Markdown won’t "
#~ "allow it. Similarly, RST will default"
#~ " to whatever order you give to "
#~ "the title formats (as they appear "
#~ "in the first sections of your "
#~ "doc)."
#~ msgstr ""

#~ msgid "# Documentation style guide for contributors"
#~ msgstr ""

#~ msgid "*Audience: documentation writers and editors*"
#~ msgstr ""

#~ msgid ""
#~ "**When in doubt, use the docs "
#~ "themselves for guidance on how to "
#~ "format things.**"
#~ msgstr ""

#~ msgid ""
#~ "[For RST formatting](http://hyperledger-"
#~ "fabric.readthedocs.io/en/release-1.4/channel_update_tutorial.html)."
#~ msgstr ""

#~ msgid ""
#~ "[For Markdown formatting](http://hyperledger-"
#~ "fabric.readthedocs.io/en/release-1.4/peers/peers.html)."
#~ msgstr ""

#~ msgid ""
#~ "If you just want to look at "
#~ "how things are formatted, you can "
#~ "navigate to the Fabric repo to "
#~ "look at the raw file by clicking"
#~ " on `Edit on Github` link in "
#~ "the upper right hand corner of the"
#~ " page. Then click the `Raw` tab. "
#~ "This will show you the formatting "
#~ "of the doc. **Do not attempt to"
#~ " edit the file on Github.** If "
#~ "you want to make a change, clone"
#~ " the repo and follow the instructions"
#~ " in [Contributing](contributing.html) for "
#~ "creating pull requests."
#~ msgstr ""

#~ msgid "**Line lengths.**"
#~ msgstr ""

#~ msgid "**Tutorials should have a list of steps at the top.**"
#~ msgstr ""

#~ msgid ""
#~ "A list of steps (with links to "
#~ "the corresponding sections) at the "
#~ "beginning of a tutorial helps users "
#~ "find particular steps they're interested "
#~ "in. For an example, check out [Use"
#~ " private data in Fabric](../private-data"
#~ "/private-data.html)."
#~ msgstr ""

#~ msgid "**\"Fabric\", \"Hyperledger Fabric\" or \"HLF\"?**"
#~ msgstr ""

#~ msgid "**Chaincode vs. Chaincodes?**"
#~ msgstr ""

#~ msgid "**When to bold?**"
#~ msgstr ""

#~ msgid ""
#~ "Not too often. The best use of "
#~ "them is either as a summary or "
#~ "as a way of drawing attention to"
#~ " concepts you want to talk about. "
#~ "“A blockchain network contains a ledger,"
#~ " at least one chaincode, and peers”,"
#~ " especially if you’re going to be "
#~ "talking about those things in that "
#~ "paragraph. Avoid using them simply to"
#~ " emphasize a single word, as in "
#~ "something like \"Blockchain networks **must**"
#~ " use propery security protocols\"."
#~ msgstr ""

#~ msgid "**When to surround something in back tics `nnn`?**"
#~ msgstr ""

#~ msgid ""
#~ "This is useful to draw attention "
#~ "to words that either don’t make "
#~ "sense in plain English or when "
#~ "referencing parts of the code "
#~ "(especially if you’ve put code snippets"
#~ " in your doc). So for example, "
#~ "when talking about the fabric-samples"
#~ " directory, surround `fabric-samples` with"
#~ " back tics. Same with a code "
#~ "function like `hf.Revoker`. It might "
#~ "also make sense to put back tics"
#~ " around words that do make sense "
#~ "in plain English that are part of"
#~ " the code if you're referencing them"
#~ " in a code context. For example, "
#~ "when referencing an `attribute` as part"
#~ " of an Access Control List."
#~ msgstr ""

#~ msgid "**Is it ever appropriate to use a dash?**"
#~ msgstr ""

#~ msgid ""
#~ "``` This leaves us with a trimmed"
#~ " down JSON object --- config.json, "
#~ "located in the fabric-samples folder "
#~ "inside first-network --- which will "
#~ "serve as the baseline for our "
#~ "config update. ```"
#~ msgstr ""

#~ msgid "**When to use hyphens?**"
#~ msgstr ""

#~ msgid "**How many spaces after a period?**"
#~ msgstr ""

#~ msgid "**How should numbers be rendered?**"
#~ msgstr ""

#~ msgid "**Try to avoid using the same words too often.**"
#~ msgstr ""

#~ msgid "**How should files be named?**"
#~ msgstr ""

#~ msgid ""
#~ "For example, `identity_use_case_tutorial.md`. While"
#~ " not all files use this standard, "
#~ "new files should adhere to it."
#~ msgstr ""

#~ msgid "**Capitalization rules for doc titles.**"
#~ msgstr ""

#~ msgid "**Use the Oxford comma?**"
#~ msgstr ""

#~ msgid "**JSON vs .json?**"
#~ msgstr ""

#~ msgid "**Referring to the reader.**"
#~ msgstr ""

#~ msgid "**Ampersands (&).**"
#~ msgstr ""

#~ msgid "**Acronyms.**"
#~ msgstr ""

#~ msgid "**Captions.**"
#~ msgstr ""

#~ msgid "**Commands.**"
#~ msgstr ""

#~ msgid "**Code snippets.**"
#~ msgstr ""

#~ msgid "``` Code goes here."
#~ msgstr ""

#~ msgid "Even more code goes here."
#~ msgstr ""

#~ msgid "And still more. ```"
#~ msgstr ""

#~ msgid "``` .. code:: bash"
#~ msgstr ""

#~ msgid "Code goes here."
#~ msgstr ""

#~ msgid "```"
#~ msgstr ""

#~ msgid ""
#~ "You can substitute `bash` for a "
#~ "language like Java or Go, where "
#~ "appropriate."
#~ msgstr ""

#~ msgid "**Enumerated lists in markdown.**"
#~ msgstr ""

#~ msgid ""
#~ "Note that in Markdown, enumerated lists"
#~ " will not work if you separate "
#~ "the numbers with a space. Markdown "
#~ "sees this as the start of a "
#~ "new list, not a continuation of "
#~ "the old one (every number will be"
#~ " `1.`). If you need an enumerated "
#~ "list, you will have to use RST."
#~ " Bulleted lists are a good substitute"
#~ " in Markdown, and are the recommended"
#~ " alternative."
#~ msgstr ""

#~ msgid "**Linking.**"
#~ msgstr ""

#~ msgid ""
#~ "When linking to another doc, use "
#~ "relative links, not direct links. When"
#~ " naming a link, do not just "
#~ "call it \"link\". Use a more "
#~ "creative and descriptive name. For "
#~ "accessibility reasons, the link name "
#~ "should also make it clear that it"
#~ " is a link. For example, check "
#~ "out [this link to Google](www.google.com)."
#~ msgstr ""

#~ msgid "**curl vs cURL.**"
#~ msgstr ""

#~ msgid "**Fabric CA.**"
#~ msgstr ""

#~ msgid "**Raft and RAFT.**"
#~ msgstr ""

#~ msgid "**All docs have to end with a license statement.**"
#~ msgstr ""

#~ msgid ""
#~ "``` .. Licensed under Creative Commons"
#~ " Attribution 4.0 International License"
#~ msgstr ""

#~ msgid "https://creativecommons.org/licenses/by/4.0/"
#~ msgstr ""

#~ msgid ""
#~ "``` <!--- Licensed under Creative "
#~ "Commons Attribution 4.0 International License"
#~ " https://creativecommons.org/licenses/by/4.0/ --> ```"
#~ msgstr ""

#~ msgid "**How many spaces for indentation?**"
#~ msgstr ""

#~ msgid ""
#~ "``` .. note:: Some words and stuff"
#~ " etc etc etc (line continues until"
#~ " the 70 character limit line)"
#~ msgstr ""

#~ msgid ""
#~ "the line directly below has to "
#~ "start at the same space as the "
#~ "one above."
#~ msgstr ""

#~ msgid "**When to use which type of heading.**"
#~ msgstr ""

#~ msgid ""
#~ "Check out [this topic on headings](http"
#~ "://blender-manual-"
#~ "i18n.readthedocs.io/ja/latest/about/markup_style_guide.html?highlight=tooltip#headings)."
#~ msgstr ""

#~ msgid "``` Chapter 1 Title ==============="
#~ msgstr ""

#~ msgid "Section 1.1 Title"
#~ msgstr ""

#~ msgid "Subsection 1.1.1 Title"
#~ msgstr ""

#~ msgid "Section 1.2 Title"
#~ msgstr ""

#~ msgid "``` # The Name of the Doc (this will get pulled for the TOC)."
#~ msgstr ""

#~ msgid "## First subsection"
#~ msgstr ""

#~ msgid "## Second subsection ```"
#~ msgstr ""

#~ msgid ""
#~ "Both file formats don't like when "
#~ "these things are done out of "
#~ "order. For example, you might want "
#~ "a `####` to be the first thing "
#~ "after your `#` Title. Markdown won’t "
#~ "allow it. Similarly, RST will default"
#~ " to whatever order you give to "
#~ "the title formats (as they appear "
#~ "in the first sections of your "
#~ "doc)."
#~ msgstr ""

#~ msgid ""
#~ "<!--- Licensed under Creative Commons "
#~ "Attribution 4.0 International License "
#~ "https://creativecommons.org/licenses/by/4.0/ -->"
#~ msgstr ""

