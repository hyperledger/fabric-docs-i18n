# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-23 15:31-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/channels.rst:2
msgid "Channels"
msgstr ""

#: ../../source/channels.rst:4
msgid ""
"A Hyperledger Fabric ``channel`` is a private \"subnet\" of communication"
" between two or more specific network members, for the purpose of "
"conducting private and confidential transactions. A channel is defined by"
" members (organizations), anchor peers per member, the shared ledger, "
"chaincode application(s) and the ordering service node(s). Each "
"transaction on the network is executed on a channel, where each party "
"must be authenticated and authorized to transact on that channel. Each "
"peer that joins a channel, has its own identity given by a membership "
"services provider (MSP), which authenticates each peer to its channel "
"peers and services."
msgstr ""

#: ../../source/channels.rst:13
msgid ""
"To create a new channel, the client SDK calls configuration system "
"chaincode and references properties such as ``anchor peers``, and members"
" (organizations). This request creates a ``genesis block`` for the "
"channel ledger, which stores configuration information about the channel "
"policies, members and anchor peers. When adding a new member to an "
"existing channel, either this genesis block, or if applicable, a more "
"recent reconfiguration block, is shared with the new member."
msgstr ""

#: ../../source/channels.rst:20
msgid ""
"See the :doc:`configtx` section for more details on the properties and "
"proto structures of config transactions."
msgstr ""

#: ../../source/channels.rst:23
msgid ""
"The election of a ``leading peer`` for each member on a channel "
"determines which peer communicates with the ordering service on behalf of"
" the member. If no leader is identified, an algorithm can be used to "
"identify the leader. The consensus service orders transactions and "
"delivers them, in a block, to each leading peer, which then distributes "
"the block to its member peers, and across the channel, using the "
"``gossip`` protocol."
msgstr ""

#: ../../source/channels.rst:30
msgid ""
"Although any one anchor peer can belong to multiple channels, and "
"therefore maintain multiple ledgers, no ledger data can pass from one "
"channel to another. This separation of ledgers, by channel, is defined "
"and implemented by configuration chaincode, the identity membership "
"service and the gossip data dissemination protocol. The dissemination of "
"data, which includes information on transactions, ledger state and "
"channel membership, is restricted to peers with verifiable membership on "
"the channel. This isolation of peers and ledger data, by channel, allows "
"network members that require private and confidential transactions to "
"coexist with business competitors and other restricted members, on the "
"same blockchain network."
msgstr ""

